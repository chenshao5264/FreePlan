local ProtocolNumber = class("ProtocolNumber")
function ProtocolNumber:ctor(code, uid, pnum, mapid, syncid)
    self.protcolName = {}
    self.protcolKey = {}
    self.protcolNameOfMiniGame = {}
    self.PROTOCOL_PHONE = 51024
    local i = self.PROTOCOL_PHONE - 1
    local function incr(name)
        i = i + 1
        self.protcolName[i] = name
        self.protcolKey[name] = i
        return i
    end

    local WM_USER = 1024
    self.PROTOCOL_CLIENT_UI_BEGIN = (WM_USER + 1000)       --客户端界面使用消息议分段初始值
    self.PROTOCOL_CLIENT_UI_END   = (WM_USER + 2000)            --客户端界面使用消息议分段结束值
    self.PROTOCOL_SYSTEM          = (WM_USER + 10000)       --系统协议分段初始值
    self.PROTOCOL_LOGIN           = (WM_USER+10500)        --登陆协议分段初始值
    self.PROTOCOL_REG             = (WM_USER+11000)        --登陆协议分段初始值
    self.PROTOCOL_GAMELIST        = (WM_USER + 11500)      --游戏列表管理协议分段初始值
    self.PROTOCOL_GAMECOM         = (WM_USER + 12000)      --游戏公用协议分段初始值
    self.PROTOCOL_FRIEND          = (WM_USER + 12500)      --好友协议
    self.PROTOCOL_BANK            = (WM_USER + 13000)      --银行协议
    self.PROTOCOL_GM              = (WM_USER + 13500)      --GM协议
    self.PROTOCOL_INDIVIDUAL      = (WM_USER + 14000)      --个人中心协议
    self.PROTOCOL_RECHARGE        = (WM_USER + 14500)      --充值协议
    self.PROTOCOL_MATCH           = (WM_USER + 15000)      --比赛协议
    self.PROTOCOL_CHALLENGE       = (WM_USER + 15250)      --挑战赛协议
    self.PROTOCOL_FOSSICK         = (WM_USER + 15500)      --淘金场协议
    self.PROTOCOL_NOCHEAT         = (WM_USER + 16000)      --防作弊场协议
    self.PROTOCOL_GAMESERVER      = (WM_USER + 20000)      --GM协议
    self.PROTOCOL_GAMECLIENT      = (WM_USER + 30000)      --GM协议
    self.PROTOCOL_WEB             = (WM_USER + 35000)      --web协议
    self.PROTOCOL_ITEM            = (WM_USER + 35500)      --商城道具协议
    self.PROTOCOL_USER_ITEM       = (WM_USER + 36000)      --商城道具用户协议
    self.PROTOCOL_MAIL_ITEM       = (WM_USER + 36500)	   --邮件用户协议
    self.PROTOCOL_INNER_PAGE      = (WM_USER + 37000)      --内嵌网页协议
    self.PROTOCOL_TASK            = (WM_USER + 37500)      --任务协议
    self.PROTOCOL_PHONE           = (WM_USER + 50000)     --手游相关协议开始位置

    i = self.PROTOCOL_SYSTEM - 1
    self.SS_CONNECT_REQ_P = incr("SS_CONNECT_REQ_P")	--服务器连接
    self.SS_CONNECT_ACK_P = incr("SS_CONNECT_ACK_P")	--//服务器连接回应
    self.CS_HEARTBEAT_CHECK_P = incr("CS_HEARTBEAT_CHECK_P")	--//心跳检测回馈
    self.SC_HEARTBEAT_CHECK_P = incr("SC_HEARTBEAT_CHECK_P")	--//心跳检测
    self.CC_CONNECT_REQ_P = incr("CC_CONNECT_REQ_P")	--//客户端连接请求
    self.CC_CONNECT_ACK_P = incr("CC_CONNECT_ACK_P")	--//客户段连接回应
    self.NET_DISCONNECT_P = incr("NET_DISCONNECT_P")	--//网络连接断开
    self.CC_RAND_TABLE_P = incr("CC_RAND_TABLE_P")	--
    self.CC_VERSION_DL_P = incr("CC_VERSION_DL_P")	--
    self.SS_FILTER_REQ_P = incr("SS_FILTER_REQ_P")	--
    self.SS_FILTER_LIST_P = incr("SS_FILTER_LIST_P")	--
    self.SS_TRUSTIP_REQ_P = incr("SS_TRUSTIP_REQ_P")	--
    self.SS_TRUSTIP_LIST_P = incr("SS_TRUSTIP_LIST_P")	--
    self.SS_TASK_CONNECT_P = incr("SS_TASK_CONNECT_P")	--//managerserver通知gameserver连接任务服务器

    i = self.PROTOCOL_LOGIN - 1
    self.CL_LOGIN_REQ_P = incr("CL_LOGIN_REQ_P")	--请求登录，验证用户名密码，获取通行码
    self.LC_LOGIN_ACK_P = incr("LC_LOGIN_ACK_P")	--//登录结果，如验证成功，发放通行码
    self.ML_LOGIN_ACK_P = incr("ML_LOGIN_ACK_P")	--//管理服务器回应登录服务器用户登陆结果
    self.AL_LOGIN_ACK_P = incr("AL_LOGIN_ACK_P")	--//数据库服务器回应登录服务器用户登陆结果
    self.CL_VALIDATE_REQ_P = incr("CL_VALIDATE_REQ_P")	--//请求验证码
    self.LC_VALIDATE_ACK_P = incr("LC_VALIDATE_ACK_P")	--//发送验证码
    self.LM_USERLOGIN_REQ_P = incr("LM_USERLOGIN_REQ_P")	--//登录服务器到管理服务器验证用户登陆
    self.CS_USERLOGIN_REQ_P = incr("CS_USERLOGIN_REQ_P")	--//用户登录到大厅服务器
    self.SM_USERLOGOUT_REQ_P = incr("SM_USERLOGOUT_REQ_P")	--//用户登出管理服务器
    self.SC_USERLOGIN_ACK_P = incr("SC_USERLOGIN_ACK_P")	--//用户登录大厅服务器回应
    self.CS_VALIDATE_REQ_P = incr("CS_VALIDATE_REQ_P")	--//请求验证码
    self.SC_VALIDATE_ACK_P = incr("SC_VALIDATE_ACK_P")	--//发送验证码
    self.MS_USERLOGIN_ACK_P = incr("MS_USERLOGIN_ACK_P")	--//管理服务器通知大厅服务器验证用户登陆结果
    self.DS_USERLOGIN_ACK_P = incr("DS_USERLOGIN_ACK_P")	--//数据库回应大厅服务器玩家加载数据结果
    self.SS_KICKUSER_P = incr("SS_KICKUSER_P")	--//服务器之间发送踢出玩家请求
    self.ML_LOGIN_FINISH_P = incr("ML_LOGIN_FINISH_P")	--//用户通过大厅服务器登录到了管理服务器，通知登录服务器断开连接
    self.CG_LOGIN_REQ_P = incr("CG_LOGIN_REQ_P")	--//登陆到游戏服务器
    self.GC_LOGIN_ACK_P = incr("GC_LOGIN_ACK_P")	--//游戏服务器登陆结果
    self.GM_USERLOGIN_REQ_P = incr("GM_USERLOGIN_REQ_P")	--//游戏服务器登陆用户到管理服务器
    self.GM_USERLOGOUT_REQ_P = incr("GM_USERLOGOUT_REQ_P")	--//游戏服务器用户登出管理服务器
    self.MG_USERLOGIN_ACK_P = incr("MG_USERLOGIN_ACK_P")	--//游戏服务器登录用户到管理服务器的返回结果
    self.GD_USERLOGIN_REQ_P = incr("GD_USERLOGIN_REQ_P")	--//游戏服务器登陆用户到数据库服务器
    self.DG_USERLOGIN_ACK_P = incr("DG_USERLOGIN_ACK_P")	--//游戏服务器登录用户到数据库服务器的返回结果
    self.GD_MONEY_UNLOCK_REQ_P = incr("GD_MONEY_UNLOCK_REQ_P")	--//接触游戏豆的锁定
    self.GD_MONEY_LOCK_REQ_P = incr("GD_MONEY_LOCK_REQ_P")	--//锁定游戏豆
    self.SM_LOBBY_NUM_UP_P = incr("SM_LOBBY_NUM_UP_P")	--//大厅服务器向管理服务器更新大厅服务器人数
    self.GM_GAMEINFO_P = incr("GM_GAMEINFO_P")	--//游戏服务器向管理服务器更新游戏信息
    self.GM_ROOM_NUM_UP_P = incr("GM_ROOM_NUM_UP_P")	--//游戏服务器向管理服务器更新房间人数信息
    self.SF_USERLOGIN_P = incr("SF_USERLOGIN_P")	--//用户从大厅服务器登陆社交服务器
    self.SF_USERLOGOUT_P = incr("SF_USERLOGOUT_P")	--//用户从大厅服务器登出社交服务器
    self.SC_KICKOUT_LOBBY_P = incr("SC_KICKOUT_LOBBY_P")	--//用户被提出大厅
    self.LC_DYNPWD_REQ_P = incr("LC_DYNPWD_REQ_P")	--//请求客户端输入动态密码
    self.CL_DYNPWD_ACK_P = incr("CL_DYNPWD_ACK_P")	--//输入动态密码
    self.CL_TRAIL_LOGIN_REQ_P = incr("CL_TRAIL_LOGIN_REQ_P")	--//试玩登录
    self.LC_TRAIL_LOGIN_ACK_P = incr("LC_TRAIL_LOGIN_ACK_P")	--//试玩登录回应
    self.ML_TRAIL_LOGIN_ACK_P = incr("ML_TRAIL_LOGIN_ACK_P")	--//管理服务器回应登录服务器用户登陆结果
    self.AL_TRAIL_LOGIN_ACK_P = incr("AL_TRAIL_LOGIN_ACK_P")	--//数据库服务器回应登录服务器用户登陆结果
    self.LM_TRAIL_USERLOGIN_REQ_P = incr("LM_TRAIL_USERLOGIN_REQ_P")	--//登录服务器到管理服务器验证用户登陆
    self.CS_TRAIL_TRANSFER_P = incr("CS_TRAIL_TRANSFER_P")	--//试玩完善信息
    self.SC_TRAIL_TRANSFER_P = incr("SC_TRAIL_TRANSFER_P")	--//试玩完善信息结果
    self.AD_TRAIL_CHECK_NICKNAME_P = incr("AD_TRAIL_CHECK_NICKNAME_P")	--//试玩完善信息检测昵称
    self.DA_TRAIL_CHECK_NICKNAME_P = incr("DA_TRAIL_CHECK_NICKNAME_P")	--//试玩完善信息检测昵称结果
    self.CS_ALLOCTRAIL_P = incr("CS_ALLOCTRAIL_P")	--//请求分配试玩帐号
    self.SC_ALLOCTRAIL_P = incr("SC_ALLOCTRAIL_P")	--//分配试玩帐号结果
    self.AD_ALLOC_CHECK_NICKNAME_P = incr("AD_ALLOC_CHECK_NICKNAME_P")	--//分配试玩完善信息检测昵称
    self.DA_ALLOC_CHECK_NICKNAME_P = incr("DA_ALLOC_CHECK_NICKNAME_P")	--//分配试玩完善信息检测昵称结果
    self.CA_ALLOC_P = incr("CA_ALLOC_P")	--
    self.AC_ALLOC_P = incr("AC_ALLOC_P")	--
    self.AD_ALLOC_P = incr("AD_ALLOC_P")	--
    self.SC_LOGIN_TOKEN_P = incr("SC_LOGIN_TOKEN_P")	--//登陆成功服务器发送玩家代币信息
    self.GD_USER_SAVE_BROKEN_GAME_P = incr("GD_USER_SAVE_BROKEN_GAME_P")	--//用户断线后，保存游戏信息
    self.DC_USER_LOAD_BROKEN_GAME_P = incr("DC_USER_LOAD_BROKEN_GAME_P")	--//获取断线游戏列表
    self.CL_PHONECODE_USECURRENCY_GETVALIDATECODE_REQ_P = incr("CL_PHONECODE_USECURRENCY_GETVALIDATECODE_REQ_P")	--//使用游戏豆获取验证码请求
    self.LD_USEPHONEVALICODELOGIN_REQ_P = incr("LD_USEPHONEVALICODELOGIN_REQ_P")	--//使用手机验证码登录发送给数据库服务器
    self.DL_USEPHONEVALICODELOGIN_REQ_P = incr("DL_USEPHONEVALICODELOGIN_REQ_P")	--//使用手机验证码登录发送给登录服务器
    self.LC_USEPHONEVALICODELOGIN_ACK_P = incr("LC_USEPHONEVALICODELOGIN_ACK_P")	--//回复客户端是否使用手机验证码进行登录
    self.CS_USEVALICODELOGIN_DECGAMECURRENCY_REQ_P = incr("CS_USEVALICODELOGIN_DECGAMECURRENCY_REQ_P")	--//使用验证码登录成功扣去游戏豆请求
    self.SC_USEVALICODELOGIN_DECGAMECURRENCY_ACK_P = incr("SC_USEVALICODELOGIN_DECGAMECURRENCY_ACK_P")	--//使用验证码登录成功扣去游戏豆回复
    self.CL_USEPHONEVALICODE_LOGIN_REQ_P = incr("CL_USEPHONEVALICODE_LOGIN_REQ_P")	--//使用手机验证码登录请求
    self.CL_LOGINGETSET_REQ_P = incr("CL_LOGINGETSET_REQ_P")	--//登录loginserver获取设置请求
    self.CL_LOGINGETSET_ACK_P = incr("CL_LOGINGETSET_ACK_P")	--//登录loginserver获取设置回复
    self.CS_LOGINGETSET_REQ_P = incr("CS_LOGINGETSET_REQ_P")	--//登录Lobbyserver获取设置请求
    self.CS_LOGINGETSET_ACK_P = incr("CS_LOGINGETSET_ACK_P")	--//登录lobbyserver获取设置回复
    self.CS_DIFFCITY_REQ_P = incr("CS_DIFFCITY_REQ_P")	--//获取异地登录请求
    self.GD_LOGINWRITEINFO_REQ_P = incr("GD_LOGINWRITEINFO_REQ_P")	--//登录写入登录信息请求
    self.GC_DIFFCITYRESULT_ACK_P = incr("GC_DIFFCITYRESULT_ACK_P")	--//返回异地登录结果给客户端
    self.DG_NOCHEATEUSERLOGIN_ACK_P = incr("DG_NOCHEATEUSERLOGIN_ACK_P")	--//防作弊场游戏服务器登录用户到数据库服务器的返回结果
    self.AD_TRAIL_LOGIN_REQ_P = incr("AD_TRAIL_LOGIN_REQ_P")	--//发送给数据库服务器更新过期试玩用户游戏豆

    i = self.PROTOCOL_REG - 1
    self.CL_REG_REQ_P = incr("CL_REG_REQ_P")	--注册帐号请求
    self.LC_REG_ACK_P = incr("LC_REG_ACK_P")	--//注册结果
    self.AD_CHECK_NICKNAME_P = incr("AD_CHECK_NICKNAME_P")	--//帐号服务器到主数据库服务器验证昵称是否可以注册
    self.DA_CHECK_NICKNAME_P = incr("DA_CHECK_NICKNAME_P")	--//昵称验证结果
    self.CL_CHECK_ACCOUNT_P = incr("CL_CHECK_ACCOUNT_P")	--//检测用户名
    self.LC_CHECK_ACCOUNT_P = incr("LC_CHECK_ACCOUNT_P")	--//检测用户名结果
    self.CL_CHECK_NICKNAME_P = incr("CL_CHECK_NICKNAME_P")	--//检测昵称
    self.LC_CHECK_NICKNAME_P = incr("LC_CHECK_NICKNAME_P")	--//检测昵称结果
    self.CL_CHECK_PHONECODE_P = incr("CL_CHECK_PHONECODE_P")	--//检查手机号码
    self.LC_CHECK_PHONECODE_P = incr("LC_CHECK_PHONECODE_P")	--//检查手机号码回复
    self.AD_CHECK_PHONECODE_USERD_P = incr("AD_CHECK_PHONECODE_USERD_P")	--//检查手机号码是否被使用
    self.DA_CHECK_PHONECODE_USERD_P = incr("DA_CHECK_PHONECODE_USERD_P")	--//返回检查手机号码是否被使用
    self.CL_PHONECODE_GET_VALIDATECODE_REQ_P = incr("CL_PHONECODE_GET_VALIDATECODE_REQ_P")	--//获取验证码
    self.LC_PHONECODE_GET_VALIDATECODE_ACK_P = incr("LC_PHONECODE_GET_VALIDATECODE_ACK_P")	--//获取验证码回复
    self.CL_CHECK_PHONEVALIDATECODE_REQ_P = incr("CL_CHECK_PHONEVALIDATECODE_REQ_P")	--//检查手机验证码
    self.LA_CHECK_PHONEVALIDATECODE_REQ_P = incr("LA_CHECK_PHONEVALIDATECODE_REQ_P")	--//验证手机验证码请求发送给账号数据库
    self.LC_CHECK_PHONEVALIDATECODE_ACK_P = incr("LC_CHECK_PHONEVALIDATECODE_ACK_P")	--//检查手机验证码回复
    self.LA_PHONECODE_GET_VALIDATECODE_REQ_P = incr("LA_PHONECODE_GET_VALIDATECODE_REQ_P")	--//获取验证码发送给账号服务器
    self.LA_PHONECODE_UPDATE_STATUS_P = incr("LA_PHONECODE_UPDATE_STATUS_P")	--//更新用户获取手机验证码状态
    self.CL_PHONECODE_REG_REQ_P = incr("CL_PHONECODE_REG_REQ_P")	--//手机号注册请求
    self.LC_PHONECODE_REG_ACK_P = incr("LC_PHONECODE_REG_ACK_P")	--//手机号注册结果
    self.AD_PHONE_CHECK_NICKNAME_P = incr("AD_PHONE_CHECK_NICKNAME_P")	--//帐号服务器到主数据库服务器验证昵称和手机号是否可以注册
    self.DL_PHONE_CHECK_PHONEBINDACCOUNTLIMIT_ACK_P = incr("DL_PHONE_CHECK_PHONEBINDACCOUNTLIMIT_ACK_P")	--//检查手机号绑定是否超过上限

    i = self.PROTOCOL_GAMELIST - 1
    self.CS_GAMELIST_REQ_P = incr("CS_GAMELIST_REQ_P")	--请求游戏列表
    self.SC_GAMELIST_ACK_P = incr("SC_GAMELIST_ACK_P")	--//游戏列表回应
    self.SC_GAME_ADD_P = incr("SC_GAME_ADD_P")	--//添加游戏服务器
    self.SC_GAME_DEL_P = incr("SC_GAME_DEL_P")	--//删除游戏服务器
    self.SC_GAME_UP_ROOMNUM_P = incr("SC_GAME_UP_ROOMNUM_P")	--//更新游戏服务器各房间人数

    i = self.PROTOCOL_GAMECOM - 1
    self.CG_ROOM_USERLIST_P = incr("CG_ROOM_USERLIST_P")	--请求房间人数列表
    self.GC_ROOM_USERLIST_P = incr("GC_ROOM_USERLIST_P")	--//发送房间人数列表给客户端
    self.GC_GAMEUSER_ADD_P = incr("GC_GAMEUSER_ADD_P")	--//添加用户
    self.GC_GAMEUSER_DEL_P = incr("GC_GAMEUSER_DEL_P")	--//删除用户
    self.GC_GAMEUSER_UP_P = incr("GC_GAMEUSER_UP_P")	--//更新用户
    self.GC_TABLE_STATSLIST_P = incr("GC_TABLE_STATSLIST_P")	--//发送桌子状态列表给客户段
    self.GC_TABLE_STATUS_UP_P = incr("GC_TABLE_STATUS_UP_P")	--//更新桌子状态
    self.GC_TABLE_USERLIST_P = incr("GC_TABLE_USERLIST_P")	--//发送桌子用户列表给客户端
    self.CG_ENTERTABLE_REQ_P = incr("CG_ENTERTABLE_REQ_P")	--//玩家请求坐桌子
    self.GC_ENTERTABLE_ACK_P = incr("GC_ENTERTABLE_ACK_P")	--//坐桌子回应
    self.CG_LEAVETABLE_REQ_P = incr("CG_LEAVETABLE_REQ_P")	--//离开桌子请求
    self.GC_ENTERTABLE_P = incr("GC_ENTERTABLE_P")	--//加入桌子广播
    self.CC_ENTERTABLE_P = incr("CC_ENTERTABLE_P")	--//大厅通知游戏玩家加入
    self.GC_LEAVETABLE_P = incr("GC_LEAVETABLE_P")	--//离开桌子广播
    self.CG_HANDUP_P = incr("CG_HANDUP_P")	--//举手请求
    self.GC_HANDUP_P = incr("GC_HANDUP_P")	--//举手请求广播
    self.GC_GAME_START_P = incr("GC_GAME_START_P")	--//本桌游戏开始通知
    self.CG_AGREELEAVE_REQ_P = incr("CG_AGREELEAVE_REQ_P")	--//请求协议退出
    self.GC_AGREELEAVE_ACK_P = incr("GC_AGREELEAVE_ACK_P")	--//协议退出结果
    self.GC_AGREELEAVE_ASK_P = incr("GC_AGREELEAVE_ASK_P")	--//询问其它玩家是否同意协议退出
    self.CG_AGREELEAVE_ASW_P = incr("CG_AGREELEAVE_ASW_P")	--//回复协议退出询问
    self.GC_STARTTIMER_P = incr("GC_STARTTIMER_P")	--//启动客户段定时器
    self.CG_TABLECHAT_P = incr("CG_TABLECHAT_P")	--//聊天
    self.GC_TABLECHAT_P = incr("GC_TABLECHAT_P")	--
    self.CG_ROOMCHAT_P = incr("CG_ROOMCHAT_P")	--
    self.GC_ROOMCHAT_P = incr("GC_ROOMCHAT_P")	--
    self.CG_KICKUSER_REQ_P = incr("CG_KICKUSER_REQ_P")	--//踢掉对方
    self.GC_KICKUSER_ACK_P = incr("GC_KICKUSER_ACK_P")	--
    self.GC_KICKUSER_NOT_P = incr("GC_KICKUSER_NOT_P")	--
    self.CG_INVITE_REQ_P = incr("CG_INVITE_REQ_P")	--//邀请其它用户参加游戏
    self.GC_INVITE_ASK_P = incr("GC_INVITE_ASK_P")	--//邀请询问
    self.CG_ROOM_SETING_REQ_P = incr("CG_ROOM_SETING_REQ_P")	--//设置请求
    self.CG_WATCH_SET_REQ_P = incr("CG_WATCH_SET_REQ_P")	--//是否允许旁观设置请求
    self.CG_TEST_NETDELAY_P = incr("CG_TEST_NETDELAY_P")	--
    self.GC_TEST_NETDELAY_P = incr("GC_TEST_NETDELAY_P")	--
    self.GD_UP_GAMEINFO_P = incr("GD_UP_GAMEINFO_P")	--//更新游戏信息
    self.CG_USE_ITEM_P = incr("CG_USE_ITEM_P")	--//使用道具
    self.GC_USE_ITEM_P = incr("GC_USE_ITEM_P")	--//使用道具结果
    self.GD_CLEAR_SCORE_P = incr("GD_CLEAR_SCORE_P")	--//负分清零
    self.DG_CLEAR_SCORE_P = incr("DG_CLEAR_SCORE_P")	--//负分清零结果
    self.SS_ONLINE_GIVE_P = incr("SS_ONLINE_GIVE_P")	--//在线送分
    self.GC_SYS_KICKUSER_NOT_P = incr("GC_SYS_KICKUSER_NOT_P")	--
    self.GC_TABLE_CHATFAIL_P = incr("GC_TABLE_CHATFAIL_P")	--
    self.GC_ROOM_CHATFAIL_P = incr("GC_ROOM_CHATFAIL_P")	--
    self.GC_ENTERTABLE_SAMEIP_P = incr("GC_ENTERTABLE_SAMEIP_P")	--
    self.CG_ENTERTABLE_SAMEIP_P = incr("CG_ENTERTABLE_SAMEIP_P")	--
    self.CG_FAST_JOIN_GAME_REQ_P = incr("CG_FAST_JOIN_GAME_REQ_P")	--//快速加入游戏请求
    self.CG_BLACK_SUREENTERTABLE_REQ_P = incr("CG_BLACK_SUREENTERTABLE_REQ_P")	--//桌子上有黑名单也确定加入游戏
    self.CG_JOIN_TABLE_REQ_P = incr("CG_JOIN_TABLE_REQ_P")	--//加入指定桌子请求（没有指定椅子号）
    self.CG_TABLE_MAXNUM_REQ_P = incr("CG_TABLE_MAXNUM_REQ_P")	--//桌子游戏的最大人数请求
    self.GC_TABLE_MAXNUM_ACK_P = incr("GC_TABLE_MAXNUM_ACK_P")	--//桌子游戏的最大人数回复
    self.FC_BULLETIN_INFO_P = incr("FC_BULLETIN_INFO_P")	--//公告消息
    self.GF_BULLETIN_INFO_P = incr("GF_BULLETIN_INFO_P")	--//发送公告消息到功能服务器
    self.GC_ROUNDGAME_END_ACK_P = incr("GC_ROUNDGAME_END_ACK_P")	--//单局游戏结束协议
    self.GF_GAMEBULLETIN_INFO_P = incr("GF_GAMEBULLETIN_INFO_P")	--//发送小游戏公告信息到功能服务器
    self.FG_GAMEBULLETIN_INFO_P = incr("FG_GAMEBULLETIN_INFO_P")	--//返回小游戏公告信息给客户端
    self.GF_SENDAWARDPOOL_INFO_P = incr("GF_SENDAWARDPOOL_INFO_P")	--//发送获取奖池信息给功能服务器
    self.FD_SENDAWARDPOOL_INFO_P = incr("FD_SENDAWARDPOOL_INFO_P")	--//发送获取奖池信息给数据库服务器
    self.DF_SENDAWARDPOOL_INFO_P = incr("DF_SENDAWARDPOOL_INFO_P")	--//返回所有游戏对应的奖池信息
    self.FG_SENDAWARDPOOL_INFO_P = incr("FG_SENDAWARDPOOL_INFO_P")	--//返回奖池奖金给游戏服务器
    self.GC_LOTTDRAWQUALICATION_ACK_P = incr("GC_LOTTDRAWQUALICATION_ACK_P")	--//发送抽奖资格信息给客户端
    self.CG_GETAWARDPOOL_INFO_P = incr("CG_GETAWARDPOOL_INFO_P")	--//获取奖池信息
    self.GF_GETAWARDPOOLMONEY_REQ_P = incr("GF_GETAWARDPOOLMONEY_REQ_P")	--//获取奖池奖金
    self.FG_GETAWARDPOOLMONEY_ACK_P = incr("FG_GETAWARDPOOLMONEY_ACK_P")	--//返回奖池奖金
    self.GC_BROADGETAWARDPOOLMONEY_ACK_P = incr("GC_BROADGETAWARDPOOLMONEY_ACK_P")	--//广播给对应GAMEID的所有游戏服务器
    self.GD_GETAWARDPOOLRECORD_REQ_P = incr("GD_GETAWARDPOOLRECORD_REQ_P")	--//获取用户奖池记录
    self.GC_GETLOTTERDRAWRECORD_ACK_P = incr("GC_GETLOTTERDRAWRECORD_ACK_P")	--//发送抽奖记录给客户端
    self.GC_SELFLOTTERDRAWRECORD_ACK_P = incr("GC_SELFLOTTERDRAWRECORD_ACK_P")	--//发送自己的抽奖记录给客户端
    self.GC_LOTTERDRAWRANK_ACK_P = incr("GC_LOTTERDRAWRANK_ACK_P")	--//发送抽奖排行给客户端
    self.CG_LOTTERDRAW_REQ_P = incr("CG_LOTTERDRAW_REQ_P")	--//抽奖申请
    self.GF_LOTTERDRAW_REQ_P = incr("GF_LOTTERDRAW_REQ_P")	--//发送给功能服务器处理抽奖
    self.FD_LOTTERDRAW_REQ_P = incr("FD_LOTTERDRAW_REQ_P")	--//发送给数据服务器处理抽奖
    self.GC_LOTTERDRAW_ACK_P = incr("GC_LOTTERDRAW_ACK_P")	--//返回给客户端用户抽奖结果
    self.FD_SAVEAWARDPOOLINFO_REQ_P = incr("FD_SAVEAWARDPOOLINFO_REQ_P")	--//发送给数据库服务器保存奖池信息
    self.GC_SENDSELFAWARDINFO_ACK_P = incr("GC_SENDSELFAWARDINFO_ACK_P")	--//发送给自己中奖信息
    self.GD_GETBETSETINFO_REQ_P = incr("GD_GETBETSETINFO_REQ_P")	--//发送给数据库服务器获取底注设置信息
    self.DG_GETBETSETINFO_ACK_P = incr("DG_GETBETSETINFO_ACK_P")	--//返回用户设置的底注给游戏服务器
    self.GC_GETBETSETINFO_ACK_P = incr("GC_GETBETSETINFO_ACK_P")	--//返回给用户设置的底注
    self.CG_SETBET_REQ_P = incr("CG_SETBET_REQ_P")	--//设置底注请求
    self.GC_SETBET_ACK_P = incr("GC_SETBET_ACK_P")	--//返回设置底注
    self.GC_TABLESETBET_INFO_ACK_P = incr("GC_TABLESETBET_INFO_ACK_P")	--//广播桌子设置底注信息
    self.GC_CUSTOMTABLENUM_ACK_P = incr("GC_CUSTOMTABLENUM_ACK_P")	--//发送自定义桌子人数信息给客户端
    self.GC_BETSETUPLIMIT_INFO_ACK_P = incr("GC_BETSETUPLIMIT_INFO_ACK_P")	--//发送底注设置上限信息给客户端
    self.GC_BRINGGAMECURRENCY_INFO_ACK_P = incr("GC_BRINGGAMECURRENCY_INFO_ACK_P")	--//发送携带游戏豆信息给客户端
    self.CG_CHECKBET_REQ_P = incr("CG_CHECKBET_REQ_P")	--//选择底注申请
    self.GC_CHECKBET_ACK_P = incr("GC_CHECKBET_ACK_P")	--//返回选择底注结果
    self.CG_SETCURRENTTABLE_USERINFO_REQ_P = incr("CG_SETCURRENTTABLE_USERINFO_REQ_P")	--//设置本桌用户的信息
    self.CG_SUPPLYGAMECURRENCY_REQ_P = incr("CG_SUPPLYGAMECURRENCY_REQ_P")	--//补充筹码请求
    self.GC_DZ_STARTTIMER_P = incr("GC_DZ_STARTTIMER_P")	--//启动客户段定时器
    self.CG_GETSHOWSETBETINFO_REQ_P = incr("CG_GETSHOWSETBETINFO_REQ_P")	--//获取是否显示设置底注信息
    self.GC_GETSHOWSETBETINFO_ACK_P = incr("GC_GETSHOWSETBETINFO_ACK_P")	--//返回是否显示设置底注信息
    self.GC_TABLEUSERBRINGGAMECURRENCY_ACK_P = incr("GC_TABLEUSERBRINGGAMECURRENCY_ACK_P")	--//将桌子上玩家携带的游戏豆发给进入的玩家
    self.GC_SUPPLYINFO_ACK_P = incr("GC_SUPPLYINFO_ACK_P")	--//发送补充游戏豆结果信息给客户端
    self.CG_HUNDRED_JOIN_GAME_REQ_P = incr("CG_HUNDRED_JOIN_GAME_REQ_P")	--//百人场加入游戏请求
    self.CG_HUNDRED_AC_BANKER_REQ_P = incr("CG_HUNDRED_AC_BANKER_REQ_P")	--//申请取消上庄
    self.GC_HUNDRED_AC_BANKER_ACK_P = incr("GC_HUNDRED_AC_BANKER_ACK_P")	--//申请取消上庄回复
    self.GC_HUNDRED_UP_BANKER_INFO_P = incr("GC_HUNDRED_UP_BANKER_INFO_P")	--//更新庄家信息
    self.GC_HUNDRED_UP_BANKER_WAITLIST_P = incr("GC_HUNDRED_UP_BANKER_WAITLIST_P")	--//更新上庄等待列表
    self.GC_BET_MONEY_INFO_P = incr("GC_BET_MONEY_INFO_P")	--//筹码游戏豆数据
    self.GC_MONEY_LIMIT_P = incr("GC_MONEY_LIMIT_P")	--//游戏豆不足，取消上庄或上庄等待
    self.CG_CREATEROOMINFO_REQ_P = incr("CG_CREATEROOMINFO_REQ_P")	--//创建房间信息请求
    self.GC_CREATEROOMINFO_ACK_P = incr("GC_CREATEROOMINFO_ACK_P")	--//创建房间信息回复
    self.GC_TABLEMASTER_INFO_P = incr("GC_TABLEMASTER_INFO_P")	--//通知房间房主信息
    self.GC_ROOMS_MASTER_P = incr("GC_ROOMS_MASTER_P")	--//通知房间房主
    self.GC_ROOMTABLE_INFO_ACK_P = incr("GC_ROOMTABLE_INFO_ACK_P")	--//发送包房信息
    self.GC_CREATEROOM_INFO_P = incr("GC_CREATEROOM_INFO_P")	--//通知创建房间信息
    self.CG_ROOMPASSWORD_REQ_P = incr("CG_ROOMPASSWORD_REQ_P")	--//获取包房房间密码请求
    self.GC_ROOMPASSWORD_ACK_P = incr("GC_ROOMPASSWORD_ACK_P")	--//回复获取包房房间密码

    i = self.PROTOCOL_FRIEND - 1
    self.CF_FRIADD_REQ_P = incr("CF_FRIADD_REQ_P")	--
    self.FC_FRIADD_ASK_P = incr("FC_FRIADD_ASK_P")	--
    self.CF_FRIADD_ASW_P = incr("CF_FRIADD_ASW_P")	--
    self.FC_FRIADD_ACK_P = incr("FC_FRIADD_ACK_P")	--
    self.CF_FRIDEL_REQ_P = incr("CF_FRIDEL_REQ_P")	--
    self.FC_FRIDEL_ACK_P = incr("FC_FRIDEL_ACK_P")	--
    self.CF_FRILIST_REQ_P = incr("CF_FRILIST_REQ_P")	--
    self.FC_FRILIST_ACK_P = incr("FC_FRILIST_ACK_P")	--
    self.DF_BEFRILIST_P = incr("DF_BEFRILIST_P")	--
    self.FC_FRISTATE_UP_P = incr("FC_FRISTATE_UP_P")	--
    self.CF_PRIVATE_CHAT_P = incr("CF_PRIVATE_CHAT_P")	--
    self.FC_PRIVATE_CHAT_P = incr("FC_PRIVATE_CHAT_P")	--
    self.CF_FRIEND_MARK_P = incr("CF_FRIEND_MARK_P")	--//修改好友备注
    self.FC_FRIEND_MARK_P = incr("FC_FRIEND_MARK_P")	--//修改好友结果
    self.FD_UPDATE_FRILIMIT_P = incr("FD_UPDATE_FRILIMIT_P")	--//好友限制
    self.DF_UPDATE_FRILIMIT_P = incr("DF_UPDATE_FRILIMIT_P")	--//好友限制回复
    self.FD_CHECK_FRILIMIT_P = incr("FD_CHECK_FRILIMIT_P")	--//检测限制次数
    self.DF_CHECK_FRILIMIT_P = incr("DF_CHECK_FRILIMIT_P")	--//检测限制次数回复
    self.CF_REQUESTION_VIEW_INFO_P = incr("CF_REQUESTION_VIEW_INFO_P")	--//查看好友详细信息列表 LF FD 共用MESSAGE
    self.FC_REQUESTION_VIEW_INFO_ACK_P = incr("FC_REQUESTION_VIEW_INFO_ACK_P")	--//查看好友详细信息列表回复
    self.DG_GETFRIBLACK_RESULT_ACK_P = incr("DG_GETFRIBLACK_RESULT_ACK_P")	--//获取好友黑名单给GAMESERVER

    i = self.PROTOCOL_BANK - 1
    self.CS_BANKDATA_REQ_P = incr("CS_BANKDATA_REQ_P")	--
    self.SC_BACKDATA_ACK_P = incr("SC_BACKDATA_ACK_P")	--
    self.CS_COFFER_RENEWALS_REQ_P = incr("CS_COFFER_RENEWALS_REQ_P")	--
    self.SC_COFFER_RENEWALS_ACK_P = incr("SC_COFFER_RENEWALS_ACK_P")	--
    self.CS_COFFER_OP_REQ_P = incr("CS_COFFER_OP_REQ_P")	--
    self.SC_COFFER_OP_ACK_P = incr("SC_COFFER_OP_ACK_P")	--
    self.CS_MONEYTANSF_REQ_P = incr("CS_MONEYTANSF_REQ_P")	--
    self.SC_MONEYTANSF_ACK_P = incr("SC_MONEYTANSF_ACK_P")	--

    i = self.PROTOCOL_GM - 1
    self.GM_DISSOLVE_TABLE_P = incr("GM_DISSOLVE_TABLE_P")	--解散桌子和房间命令
    self.GM_DISSOLVE_TABLE_CLIENT_P = incr("GM_DISSOLVE_TABLE_CLIENT_P")	--//解散通知
    self.GM_MSG_ROOM_P = incr("GM_MSG_ROOM_P")	--//房间gm消息
    self.GM_MSG_GAME_P = incr("GM_MSG_GAME_P")	--
    self.GM_MSG_CLIENT_P = incr("GM_MSG_CLIENT_P")	--//gm消息
    self.GM_FORBIDCHAT_P = incr("GM_FORBIDCHAT_P")	--//禁言
    self.GM_FORBIDCHAT_CLIENT_P = incr("GM_FORBIDCHAT_CLIENT_P")	--//禁言通知
    self.GM_KICKUSER_P = incr("GM_KICKUSER_P")	--//踢出玩家
    self.GM_KICKUSER_CLINET_P = incr("GM_KICKUSER_CLINET_P")	--//踢出玩家通知
    self.GM_BULLETIN_P = incr("GM_BULLETIN_P")	--//系统公告
    self.GM_BULLETIN_CLIENT_P = incr("GM_BULLETIN_CLIENT_P")	--//统统公告通知
    self.GM_DISSOLVE_GAME_P = incr("GM_DISSOLVE_GAME_P")	--//解散整个游戏
    self.GM_FILTER_P = incr("GM_FILTER_P")	--//添加屏蔽字
    self.GM_FILTER_CLIENT_P = incr("GM_FILTER_CLIENT_P")	--//添加屏蔽字结果
    self.GM_SENDLOTTERYDRAWQUALIFICATION_P = incr("GM_SENDLOTTERYDRAWQUALIFICATION_P")	--//发放抽奖资格
    self.GM_SENDLOTTERYDRAWQUALIFICATION_CLIENT_P = incr("GM_SENDLOTTERYDRAWQUALIFICATION_CLIENT_P")	--//发送抽奖资格给客户端
    self.GM_RETURNSETLOTTERDRAWQUALI_CLIENT_P = incr("GM_RETURNSETLOTTERDRAWQUALI_CLIENT_P")	--//返回设置抽奖结果给GM管理员

    i = self.PROTOCOL_INDIVIDUAL - 1
    self.CS_VIP_PAY_P = incr("CS_VIP_PAY_P")	--
    self.SC_VIP_PAY_P = incr("SC_VIP_PAY_P")	--
    self.CS_CHANGE_PASSWD_P = incr("CS_CHANGE_PASSWD_P")	--
    self.SC_CHANGE_PASSWD_P = incr("SC_CHANGE_PASSWD_P")	--
    self.CS_CREATE_SEPASSWD_P = incr("CS_CREATE_SEPASSWD_P")	--
    self.SC_CREATE_SEPASSWD_P = incr("SC_CREATE_SEPASSWD_P")	--
    self.CS_BINDMAC_P = incr("CS_BINDMAC_P")	--
    self.CS_UNBINDMAC_P = incr("CS_UNBINDMAC_P")	--
    self.SC_UNBINDMAC_P = incr("SC_UNBINDMAC_P")	--
    self.CS_USERMORE_P = incr("CS_USERMORE_P")	--
    self.SC_USERMORE_P = incr("SC_USERMORE_P")	--
    self.CS_CHANGE_INFO_P = incr("CS_CHANGE_INFO_P")	--
    self.SC_CHANGE_INFO_P = incr("SC_CHANGE_INFO_P")	--
    self.CS_CHANGE_NICKNAME_P = incr("CS_CHANGE_NICKNAME_P")	--
    self.SC_CHANGE_NICKNAME_P = incr("SC_CHANGE_NICKNAME_P")	--
    self.CS_CHANGE_SEPWD_P = incr("CS_CHANGE_SEPWD_P")	--
    self.SC_CHANGE_SEPWD_P = incr("SC_CHANGE_SEPWD_P")	--
    self.CL_GETPWD_P = incr("CL_GETPWD_P")	--
    self.LC_GETPWD_P = incr("LC_GETPWD_P")	--
    self.CL_UNBINDMAC_P = incr("CL_UNBINDMAC_P")	--
    self.LC_UNBINDMAC_P = incr("LC_UNBINDMAC_P")	--
    self.CS_UP_DYNPWD_P = incr("CS_UP_DYNPWD_P")	--//更新动态密码
    self.SC_UP_DYNPWD_P = incr("SC_UP_DYNPWD_P")	--//更新动态密码结果
    self.CL_GETDYNPWD_P = incr("CL_GETDYNPWD_P")	--//找回动态密码
    self.LC_GETDYNPWD_P = incr("LC_GETDYNPWD_P")	--//找回动态密码结果
    self.CS_PHONE_INFO_P = incr("CS_PHONE_INFO_P")	--//获取手机号绑定的信息
    self.SC_PHONE_INFO_P = incr("SC_PHONE_INFO_P")	--//发送手机号绑定的信息
    self.CS_PHONE_VALID_P = incr("CS_PHONE_VALID_P")	--//请求手机号验证码
    self.SC_PHONE_VALID_P = incr("SC_PHONE_VALID_P")	--//请求手机号验证码结果
    self.CS_PHONE_BIND_P = incr("CS_PHONE_BIND_P")	--//请求绑定手机号
    self.SC_PHONE_BIND_P = incr("SC_PHONE_BIND_P")	--
    self.CS_PHONE_UNBIND_P = incr("CS_PHONE_UNBIND_P")	--//请求解除绑定手机号
    self.SC_PHONE_UNDIND_P = incr("SC_PHONE_UNDIND_P")	--
    self.CS_CHANGE_EMAIL_P = incr("CS_CHANGE_EMAIL_P")	--//修改邮箱请求
    self.SC_CHANGE_EMAIL_P = incr("SC_CHANGE_EMAIL_P")	--//修改邮箱回复
    self.CS_SHOWGETLOGINAWARDUI_REQ_P = incr("CS_SHOWGETLOGINAWARDUI_REQ_P")	--//发送获取登录福利奖励界面
    self.SC_SHOWGETLOGINAWARDUI_ACK_P = incr("SC_SHOWGETLOGINAWARDUI_ACK_P")	--//回复客户端是否显示登录福利奖励界面
    self.CS_GETLOGINAWARD_REQ_P = incr("CS_GETLOGINAWARD_REQ_P")	--//领取登录奖励请求
    self.SC_GETLOGINAWARD_ACK_P = incr("SC_GETLOGINAWARD_ACK_P")	--//领取登录奖励回复
    self.CS_PHONEBIND_CHECK_PHONECODE_P = incr("CS_PHONEBIND_CHECK_PHONECODE_P")	--//手机号码绑定风雷号检查申请
    self.SC_PHONEBIND_CHECK_PHONECODE_P = incr("SC_PHONEBIND_CHECK_PHONECODE_P")	--//手机号码绑定风雷号检查回复
    self.CS_GETPHONECODEBIND_RESULT_REQ_P = incr("CS_GETPHONECODEBIND_RESULT_REQ_P")	--//得到手机号码绑定结果请求
    self.SC_GETPHONECODEBIND_RESULT_ACK_P = incr("SC_GETPHONECODEBIND_RESULT_ACK_P")	--//得到手机号码绑定结果回复
    self.CS_PHONECODEBIND_REQ_P = incr("CS_PHONECODEBIND_REQ_P")	--//绑定手机号申请
    self.SC_PHONECODEBIND_ACK_P = incr("SC_PHONECODEBIND_ACK_P")	--//绑定手机号回复
    self.CS_BIND_GETAWARD_REQ_P = incr("CS_BIND_GETAWARD_REQ_P")	--//绑定获取奖励申请
    self.SC_BIND_GETAWARD_ACK_P = incr("SC_BIND_GETAWARD_ACK_P")	--//绑定获取奖励回复
    self.SD_BIND_GETAWARD_REQ_P = incr("SD_BIND_GETAWARD_REQ_P")	--//绑定手机号发送给数据库服务器执行
    self.CS_REMOVEPHONEBIND_REQ_P = incr("CS_REMOVEPHONEBIND_REQ_P")	--//解除手机绑定请求
    self.SC_REMOVEPHONEBIND_ACK_P = incr("SC_REMOVEPHONEBIND_ACK_P")	--//回复解除手机绑定请求
    self.CS_CHECKUSEPHONELOGIN_REQ_P = incr("CS_CHECKUSEPHONELOGIN_REQ_P")	--//检查使用手机号登录请求
    self.SC_CHECKUSEPHONELOGIN_ACK_P = incr("SC_CHECKUSEPHONELOGIN_ACK_P")	--//检查使用手机号登录回复
    self.CS_SETUSEPHONELOGIN_REQ_P = incr("CS_SETUSEPHONELOGIN_REQ_P")	--//设置使用手机号登录请求
    self.SC_SETUSEPHONELOGIN_ACK_P = incr("SC_SETUSEPHONELOGIN_ACK_P")	--//设置使用手机号登录回复
    self.SA_SETUSEPHONELOGIN_REQ_P = incr("SA_SETUSEPHONELOGIN_REQ_P")	--//设置使用手机号登录发送给账号服务器更新用户手机
    self.SA_CANCELUSEPHONELOGIN_REQ_P = incr("SA_CANCELUSEPHONELOGIN_REQ_P")	--//取消使用手机号登录发送给账号服务器
    self.CS_CACELUSERPHONELOGIN_REQ_P = incr("CS_CACELUSERPHONELOGIN_REQ_P")	--//取消用户使用手机号登录申请
    self.SC_CACELUSERPHONELOGIN_ACK_P = incr("SC_CACELUSERPHONELOGIN_ACK_P")	--//取消用户使用手机号登录回复
    self.CS_SETUSEPHONEVALICODE_LOGIN_REQ_P = incr("CS_SETUSEPHONEVALICODE_LOGIN_REQ_P")	--//设置使用手机验证码登录请求
    self.SC_SETUSEPHONEVALICODE_LOGIN_ACK_P = incr("SC_SETUSEPHONEVALICODE_LOGIN_ACK_P")	--//设置使用手机验证码登录回复
    self.CS_CANCELUSEPHONEVALICODE_LOGIN_REQ_P = incr("CS_CANCELUSEPHONEVALICODE_LOGIN_REQ_P")	--//取消使用手机验证码登录请求
    self.SC_CANCELUSEPHONEVALICODE_LOGIN_ACK_P = incr("SC_CANCELUSEPHONEVALICODE_LOGIN_ACK_P")	--//取消使用手机验证码登录回复
    self.GF_GETBASELIVEING_REQ_P = incr("GF_GETBASELIVEING_REQ_P")	--//发送领取低保协议
    self.FD_GETBASELIVEING_REQ_P = incr("FD_GETBASELIVEING_REQ_P")	--//发送领取低保协议给数据库服务
    self.GC_GETBASELIVEING_ACK_P = incr("GC_GETBASELIVEING_ACK_P")	--//发送领取低保协议给客户端
    self.CG_GETBASELIVINGCURRENCY_REQ_P = incr("CG_GETBASELIVINGCURRENCY_REQ_P")	--//客户端发送领取低保
    self.GC_GETBASELIVINGCURRENCY_ACK_P = incr("GC_GETBASELIVINGCURRENCY_ACK_P")	--//返回给客户端领取低保结果
    self.DL_CHANGEBINDPHONECODE_ACK_P = incr("DL_CHANGEBINDPHONECODE_ACK_P")	--//数据库服务发送给Gameserver更新绑定的手机号
    self.ML_NEWVIPCONFIGINFO_ACK_P = incr("ML_NEWVIPCONFIGINFO_ACK_P")	--//返回LOBBYSERVER 配置的新会员功能信息
    self.CL_BUYNEWVIP_REQ_P = incr("CL_BUYNEWVIP_REQ_P")	--//购买会员请求
    self.LC_BUYNEWVIP_ACK_P = incr("LC_BUYNEWVIP_ACK_P")	--//购买会员回复
    self.LC_LOGINNEWVIPINFO_ACK_P = incr("LC_LOGINNEWVIPINFO_ACK_P")	--//登录发送新会员信息给客户端
    self.LD_SAVENEWVIPINFO_REQ_P = incr("LD_SAVENEWVIPINFO_REQ_P")	--//发送给数据库服务器保存新会员配置信息

    i = self.PROTOCOL_RECHARGE - 1
    self.CS_RECHARGE_P = incr("CS_RECHARGE_P")	--
    self.SC_RECHARGE_P = incr("SC_RECHARGE_P")	--
    self.CS_RECHARGE_OTHER_P = incr("CS_RECHARGE_OTHER_P")	--//为他人充值
    self.SC_RECHARGE_OTHER_P = incr("SC_RECHARGE_OTHER_P")	--//为他人充值回应
    self.CS_RECHARGE_NICKNAME_P = incr("CS_RECHARGE_NICKNAME_P")	--//根据id查询昵称
    self.SC_RECHARGE_NICKNAME_P = incr("SC_RECHARGE_NICKNAME_P")	--//根据id查询昵称

    i = self.PROTOCOL_MATCH - 1
    self.GC_MATCH_INFO_P = incr("GC_MATCH_INFO_P")	-- 比赛房间信息
    self.CG_MATCH_ENROLL_REQ_P = incr("CG_MATCH_ENROLL_REQ_P")	--// 比赛报名请求
    self.GC_MATCH_ENROLL_ACK_P = incr("GC_MATCH_ENROLL_ACK_P")	--// 比赛报名回复
    self.GC_MATCH_TEAM_START_P = incr("GC_MATCH_TEAM_START_P")	--// 比赛排队开始通知
    self.GC_MATCH_START_P = incr("GC_MATCH_START_P")	--// 比赛开始通知
    self.GC_MATCH_ENROLL_STATE_P = incr("GC_MATCH_ENROLL_STATE_P")	--// 玩家进入房间时，报名状态通知
    self.CG_MATCH_JION_REQ_P = incr("CG_MATCH_JION_REQ_P")	--// 加入比赛队列请求
    self.GC_MATCH_JION_ACK_P = incr("GC_MATCH_JION_ACK_P")	--// 加入比赛队列回复
    self.GD_MATCH_SCORE_RANK_UP_P = incr("GD_MATCH_SCORE_RANK_UP_P")	--// 比赛积分排名更新
    self.DG_MATCH_SCORE_RANK_UP_ACK_P = incr("DG_MATCH_SCORE_RANK_UP_ACK_P")	--// 比赛积分排名刷新回复
    self.CG_MATCH_SCORE_RANK_REQ_P = incr("CG_MATCH_SCORE_RANK_REQ_P")	--// 比赛积分排名请求
    self.GC_MATCH_SCORE_RANK_ACK_P = incr("GC_MATCH_SCORE_RANK_ACK_P")	--// 比赛积分排名回复
    self.GD_MATCH_SCORE_RANK_SAVE_P = incr("GD_MATCH_SCORE_RANK_SAVE_P")	--// 比赛积分排名保存
    self.GC_MATCH_END_P = incr("GC_MATCH_END_P")	--// 比赛结束通知
    self.CG_MATCH_HISTORY_RANK_REQ_P = incr("CG_MATCH_HISTORY_RANK_REQ_P")	--// 比赛历史排名查询请求
    self.GC_MATCH_HISTORY_RANK_ACK_P = incr("GC_MATCH_HISTORY_RANK_ACK_P")	--// 比赛历史排名查询回复
    self.GD_MATCH_HISTORY_RANK_GET_P = incr("GD_MATCH_HISTORY_RANK_GET_P")	--// 获得比赛历史排名
    self.DG_MATCH_HISTORY_RANK_GET_P = incr("DG_MATCH_HISTORY_RANK_GET_P")	--// 获得比赛历史排名回复
    self.DG_MATCH_HISTORY_RANK_UP_P = incr("DG_MATCH_HISTORY_RANK_UP_P")	--// 比赛历史排名更新通知
    self.CG_MATCH_AWARD_INFO_REQ_P = incr("CG_MATCH_AWARD_INFO_REQ_P")	--// 比赛奖励信息请求
    self.GC_MATCH_AWARD_INFO_ACK_P = incr("GC_MATCH_AWARD_INFO_ACK_P")	--// 比赛奖励信息回复
    self.CG_MATCH_GET_AWARD_REQ_P = incr("CG_MATCH_GET_AWARD_REQ_P")	--// 比赛奖励领取请求
    self.GC_MATCH_GET_AWARD_ACK_P = incr("GC_MATCH_GET_AWARD_ACK_P")	--// 比赛奖励领取回复
    self.GD_MATCH_GET_AWARD_REQ_P = incr("GD_MATCH_GET_AWARD_REQ_P")	--// 向数据库发送比赛奖励领取请求
    self.DG_MATCH_GET_AWARD_ACK_P = incr("DG_MATCH_GET_AWARD_ACK_P")	--// 数据库回复比赛奖励领取结果
    self.GD_CLEAR_MATCH_SCORE_P = incr("GD_CLEAR_MATCH_SCORE_P")	--// 比赛负分清零请求
    self.DG_CLEAR_MATCH_SCORE_P = incr("DG_CLEAR_MATCH_SCORE_P")	--// 比赛负分清零回复
    self.CG_RESET_MATCH_SCORE_P = incr("CG_RESET_MATCH_SCORE_P")	--// 比赛负分清零请求
    self.GC_RESET_MATCH_SCORE_P = incr("GC_RESET_MATCH_SCORE_P")	--// 比赛负分清零回复
    self.GC_MATCH_ROOM_NUM_LACK_P = incr("GC_MATCH_ROOM_NUM_LACK_P")	--// 比赛房间人数不足提示
    self.CS_UPDATE_MATCH_USER_INFO_P = incr("CS_UPDATE_MATCH_USER_INFO_P")	--// 玩家修改比赛个人信息请求
    self.SC_UPDATE_MATCH_USER_INFO_P = incr("SC_UPDATE_MATCH_USER_INFO_P")	--// 玩家修改比赛个人信息回复
    self.GD_WEEK_MATCH_SCORE_RANK_UP_P = incr("GD_WEEK_MATCH_SCORE_RANK_UP_P")	--// 获取截止目前为止周赛表排名数据
    self.DG_WEEK_MATCH_SCORE_RANK_UP_ACK_P = incr("DG_WEEK_MATCH_SCORE_RANK_UP_ACK_P")	--// 获取截止目前为止周赛表排名数据回复
    self.GD_WEEK_MATCH_HISTORY_RANK_UP_P = incr("GD_WEEK_MATCH_HISTORY_RANK_UP_P")	--// 获取指定日期的周赛历史排名数据
    self.DG_WEEK_MATCH_HISTORY_RANK_UP_ACK_P = incr("DG_WEEK_MATCH_HISTORY_RANK_UP_ACK_P")	--// 获取指定日期的周赛历史排名数据回复
    self.GD_USERLOGIN_WEEK_MATCH_INFO_REQ_P = incr("GD_USERLOGIN_WEEK_MATCH_INFO_REQ_P")	--// 获取用户周赛信息
    self.DG_USERLOGIN_WEEK_MATCH_INFO_ACK_P = incr("DG_USERLOGIN_WEEK_MATCH_INFO_ACK_P")	--// 获取用户周赛信息回复
    self.GC_USERLOGIN_WEEK_MATCH_P = incr("GC_USERLOGIN_WEEK_MATCH_P")	--// 服务器发送用户登录周赛个人比赛信息
    self.GD_WEEK_MATCH_SCORE_SAVE_P = incr("GD_WEEK_MATCH_SCORE_SAVE_P")	--// 比赛积分保存
    self.CG_WEEK_MATCH_RANK_REQ_P = incr("CG_WEEK_MATCH_RANK_REQ_P")	--// 周赛排名查询请求
    self.GC_WEEK_MATCH_RANK_ACK_P = incr("GC_WEEK_MATCH_RANK_ACK_P")	--// 周赛排名查询回复
    self.GC_WEEK_MATCH_END_P = incr("GC_WEEK_MATCH_END_P")	--// 周赛结束
    self.GD_MATCH_AWARDWEEK_REQ_P = incr("GD_MATCH_AWARDWEEK_REQ_P")	--//发送给数据库奖励周赛资格
    self.GC_MATCH_WEEKSENIORITYCONFIG_ACK_P = incr("GC_MATCH_WEEKSENIORITYCONFIG_ACK_P")	--//发送周赛预选资格配置给客户端
    self.CG_MATCH_LOADWEEKSENIORITYRANK_REQ_P = incr("CG_MATCH_LOADWEEKSENIORITYRANK_REQ_P")	--//获取周赛预选赛排行榜
    self.GC_MATCH_LOADWEEKSENIORITYRANK_ACK_P = incr("GC_MATCH_LOADWEEKSENIORITYRANK_ACK_P")	--//返回周赛预选赛排行榜
    self.GD_MATCH_LOADWEEKSENIORITYRANK_REQ_P = incr("GD_MATCH_LOADWEEKSENIORITYRANK_REQ_P")	--//向数据库获取周赛预选赛排行榜
    self.DG_MATCH_LOADWEEKSENIORITYRANK_ACK_P = incr("DG_MATCH_LOADWEEKSENIORITYRANK_ACK_P")	--//返回周赛预选赛排行榜
    self.GD_MATCH_UPDATEUSERSCORE_REQ_P = incr("GD_MATCH_UPDATEUSERSCORE_REQ_P")	--//更新用户净胜积分
    self.GC_MATCH_USERSCORE_ACK_P = incr("GC_MATCH_USERSCORE_ACK_P")	--//发送用户净胜积分
    self.GD_MATCH_LOADUSERWEEKQUALIFICATION_REQ_P = incr("GD_MATCH_LOADUSERWEEKQUALIFICATION_REQ_P")	--//获取用户的周赛资格
    self.DG_MATCH_LOADUSERWEEKQUALIFICATION_ACK_P = incr("DG_MATCH_LOADUSERWEEKQUALIFICATION_ACK_P")	--//返回用户的周赛资格
    self.GD_WEEKLINK_MATCH_SCORE_SAVE_P = incr("GD_WEEKLINK_MATCH_SCORE_SAVE_P")	--//保存周赛联赛数据
    self.GC_WEEKLINK_DAYAWARD_INFO_P = incr("GC_WEEKLINK_DAYAWARD_INFO_P")	--// 发送周赛预选赛奖励信息给客户端
    self.GD_WEEKLINK_AWARDCURRENCY_REQ_P = incr("GD_WEEKLINK_AWARDCURRENCY_REQ_P")	--//发送给数据库服务查看是否奖励了游戏豆或元宝
    self.DG_WEEKLINK_AWARDCURRENCY_ACK_P = incr("DG_WEEKLINK_AWARDCURRENCY_ACK_P")	--//返回给游戏服务奖励游戏豆或元宝
    self.GC_WEEKLINK_AWARDCURRENCY_ACK_P = incr("GC_WEEKLINK_AWARDCURRENCY_ACK_P")	--//发送给客户端奖励游戏豆或元宝

    i = self.PROTOCOL_CHALLENGE - 1
    self.GC_CHALLENGE_START_P = incr("GC_CHALLENGE_START_P")	-- 挑战赛开始通知
    self.GC_CHALLENGE_END_P = incr("GC_CHALLENGE_END_P")	--// 挑战赛结束通知
    self.GC_CHALLENGE_INFO_P = incr("GC_CHALLENGE_INFO_P")	--// 挑战赛信息
    self.GC_CHALLENGE_KICK_P = incr("GC_CHALLENGE_KICK_P")	--// 报名超时被踢出挑战赛房间通知
    self.GD_CHALLENGE_USERLOGIN_REQ_P = incr("GD_CHALLENGE_USERLOGIN_REQ_P")	--// 挑战赛玩家数据请求
    self.DG_CHALLENGE_USERLOGIN_ACK_P = incr("DG_CHALLENGE_USERLOGIN_ACK_P")	--// 挑战赛玩家数据回复
    self.GC_CHALLENGE_USERLOGIN_P = incr("GC_CHALLENGE_USERLOGIN_P")	--// 挑战赛玩家数据通知
    self.GC_CHALLENGE_MATCHING_NUMBER_P = incr("GC_CHALLENGE_MATCHING_NUMBER_P")	--// 正在参数人数通知
    self.GC_CHALLENGE_ENROLL_NUMBER_P = incr("GC_CHALLENGE_ENROLL_NUMBER_P")	--// 当前报名人数
    self.CG_CHALLENGE_ENROLL_REQ_P = incr("CG_CHALLENGE_ENROLL_REQ_P")	--// 挑战赛报名请求
    self.GC_CHALLENGE_ENROLL_ACK_P = incr("GC_CHALLENGE_ENROLL_ACK_P")	--// 挑战赛报名回复
    self.GC_CHALLENGE_MATCH_DATA_P = incr("GC_CHALLENGE_MATCH_DATA_P")	--// 挑战赛单场比赛数据
    self.GC_CHALLENGE_USER_SCORES_LIST_P = incr("GC_CHALLENGE_USER_SCORES_LIST_P")	--// 挑战赛玩家积分数据
    self.GC_CHALLENGE_MATCH_USER_DATA_P = incr("GC_CHALLENGE_MATCH_USER_DATA_P")	--// 挑战赛单场比赛玩家数据
    self.GC_CHALLENGE_MATCH_ABNORMAL_END_P = incr("GC_CHALLENGE_MATCH_ABNORMAL_END_P")	--// 挑战赛单场比赛异常结束通知
    self.GC_CHALLENGE_MATCH_ELIMINATED_REASON_P = incr("GC_CHALLENGE_MATCH_ELIMINATED_REASON_P")	--// 挑战赛比赛过程中被淘汰原因通知
    self.GC_CHALLENGE_UPDATE_GAMECURRENCY_P = incr("GC_CHALLENGE_UPDATE_GAMECURRENCY_P")	--// 更新游戏豆通知
    self.GD_CHALLENGE_MATTER_AWARD_P = incr("GD_CHALLENGE_MATTER_AWARD_P")	--// 挑战赛实物奖励
    self.CG_CHALLENGE_MATTER_AWARD_REQ_P = incr("CG_CHALLENGE_MATTER_AWARD_REQ_P")	--// 挑战赛实物奖励请求
    self.DG_CHALLENGE_MATTER_AWARD_ACK_P = incr("DG_CHALLENGE_MATTER_AWARD_ACK_P")	--// 挑战赛实物奖励回复(数据库)
    self.GC_CHALLENGE_MATTER_AWARD_ACK_P = incr("GC_CHALLENGE_MATTER_AWARD_ACK_P")	--// 挑战赛实物奖励回复
    self.CG_CHALLENGE_UPDATE_PHONE_REQ_P = incr("CG_CHALLENGE_UPDATE_PHONE_REQ_P")	--// 更新电话号码
    self.GD_CHALLENGE_UPDATE_PHONE_REQ_P = incr("GD_CHALLENGE_UPDATE_PHONE_REQ_P")	--// 通知数据库更新电话号码
    self.DG_CHALLENGE_UPDATE_PHONE_ACK_P = incr("DG_CHALLENGE_UPDATE_PHONE_ACK_P")	--// 数据库更新电话回复
    self.GC_CHALLENGE_UDPATE_PHONE_ACK_P = incr("GC_CHALLENGE_UDPATE_PHONE_ACK_P")	--// 更新电话回复
    self.GD_CHALLENGE_AWARD_P = incr("GD_CHALLENGE_AWARD_P")	--// 挑战赛奖励
    self.GD_CHALLENGE_SAVE_USER_DATA_P = incr("GD_CHALLENGE_SAVE_USER_DATA_P")	--// 挑战赛玩家数据保存
    self.GC_CHALLENGE_ACK_P = incr("GC_CHALLENGE_ACK_P")	--//广播挑战赛信息提示
    self.GC_CHALLENGE_END_MATTER_AWARD_ACK_P = incr("GC_CHALLENGE_END_MATTER_AWARD_ACK_P")	--//挑战赛实物奖励发送给客户端
    self.GC_CHALLENGE_DAYAWARD_INFO_P = incr("GC_CHALLENGE_DAYAWARD_INFO_P")	--// 发送挑战赛每日奖励信息给客户端
    self.GC_CHALLENGE_DAYORDER_P = incr("GC_CHALLENGE_DAYORDER_P")	--//发送挑战赛每日排行数据给客户端
    self.GC_CHALLENGE_HISORDER_P = incr("GC_CHALLENGE_HISORDER_P")	--//发送挑战赛历史排行数据给客户端
    self.GD_CHALLENGE_GETDATA_REQ_P = incr("GD_CHALLENGE_GETDATA_REQ_P")	--//获取挑战赛数据
    self.DG_CHALLENGE_GETDATA_ACK_P = incr("DG_CHALLENGE_GETDATA_ACK_P")	--//返回挑战赛数据
    self.CG_CHALLENGE_RANK_REQ_P = incr("CG_CHALLENGE_RANK_REQ_P")	--//获取挑战赛排名请求
    self.GD_CHALLENGE_DAYAWARD_REQ_P = incr("GD_CHALLENGE_DAYAWARD_REQ_P")	--//发送挑战赛每日奖励给数据库服务
    self.CG_CHALLENGE_GETDAYAWARDINFO_REQ_P = incr("CG_CHALLENGE_GETDAYAWARDINFO_REQ_P")	--//获取每日奖励信息请求
    self.GC_CHALLENGE_GETDAYAWARDINFO_ACK_P = incr("GC_CHALLENGE_GETDAYAWARDINFO_ACK_P")	--//返回每日奖励信息给客户端
    self.CG_CHALLENGE_GETDAYAWARD_REQ_P = incr("CG_CHALLENGE_GETDAYAWARD_REQ_P")	--//领取每日奖励请求
    self.GC_CHALLENGE_GETDAYAWARD_ACK_P = incr("GC_CHALLENGE_GETDAYAWARD_ACK_P")	--//领取每日奖励回复
    self.GC_CHALLENGE_AWARDINGORE_ACK_P = incr("GC_CHALLENGE_AWARDINGORE_ACK_P")	--//挑战赛奖励更新元宝通知
    self.GC_CHALLENGE_USER_DAYORDER_P = incr("GC_CHALLENGE_USER_DAYORDER_P")	--//发送当前用户的排行榜给客户端
    self.GD_CHALLENGE_AWARDYUANBAO_P = incr("GD_CHALLENGE_AWARDYUANBAO_P")	--// 挑战赛奖励元宝
    self.DG_CHALLENGE_AWARDYUANBAO_P = incr("DG_CHALLENGE_AWARDYUANBAO_P")	--// 返回挑战赛奖励元宝
    self.SS_LOING_LOG_P = incr("SS_LOING_LOG_P")	--
    self.SS_USER_LOG_P = incr("SS_USER_LOG_P")	--
    self.SS_SERVER_STAT_P = incr("SS_SERVER_STAT_P")	--
    self.SS_SHOP_BUY_LOG_P = incr("SS_SHOP_BUY_LOG_P")	--//购买日志
    self.SS_USER_ITEM_LOG_P = incr("SS_USER_ITEM_LOG_P")	--//用户道具日志
    self.SS_CHALLENGE_LOG_P = incr("SS_CHALLENGE_LOG_P")	--//挑战赛日志
    self.SS_TASK_LOG_P = incr("SS_TASK_LOG_P")	--//任务日志
    self.SS_GAME_LOG_P = incr("SS_GAME_LOG_P")	--//游戏日志

    i = self.PROTOCOL_FOSSICK - 1
    self.GD_USERLOGIN_FOSSICK_REQ_P = incr("GD_USERLOGIN_FOSSICK_REQ_P")	--用户登录淘金场数据请求
    self.DG_USERLOGIN_FOSSICK_ACK_P = incr("DG_USERLOGIN_FOSSICK_ACK_P")	--//用户登录淘金场数据回复
    self.GC_USERLOGIN_FOSSICK_P = incr("GC_USERLOGIN_FOSSICK_P")	--//服务器发送淘金信息给用户
    self.GC_USER_GET_FOSSICK_P = incr("GC_USER_GET_FOSSICK_P")	--//服务器通知用户获得淘金值
    self.GD_USER_UPDATE_FOSSICK_P = incr("GD_USER_UPDATE_FOSSICK_P")	--//更新淘金值
    self.CG_RECEIVE_FOSSICK_AWARD_REQ_P = incr("CG_RECEIVE_FOSSICK_AWARD_REQ_P")	--//领取淘金奖励请求
    self.GC_RECEIVE_FOSSICK_AWARD_ACK_P = incr("GC_RECEIVE_FOSSICK_AWARD_ACK_P")	--//领取淘金奖励回复
    self.GD_RECEIVE_FOSSICK_AWARD_DB_REQ_P = incr("GD_RECEIVE_FOSSICK_AWARD_DB_REQ_P")	--//领取淘金奖励数据库请求
    self.DG_RECEIVE_FOSSICK_AWARD_DB_ACK_P = incr("DG_RECEIVE_FOSSICK_AWARD_DB_ACK_P")	--//领取淘金奖励数据库回复
    self.MG_TWELVE_COME_P = incr("MG_TWELVE_COME_P")	--//managerserver通知gameserver十二点到了
    self.GC_RESET_FOSSICK_P = incr("GC_RESET_FOSSICK_P")	--//通知用户重置淘金值
    self.MD_RESET_FOSSICK_P = incr("MD_RESET_FOSSICK_P")	--//managerserver通知dbserver重置淘金值
    self.SC_USERLOGIN_SENDDEFAULTGAMEID_ACK_P = incr("SC_USERLOGIN_SENDDEFAULTGAMEID_ACK_P")	--//登录发送默认进入的淘金场ID给客户端

    i = self.PROTOCOL_WEB - 1
    self.WEB_CONNECT_REQ_P = incr("WEB_CONNECT_REQ_P")	--服务器连接
    self.WEB_CONNECT_ACK_P = incr("WEB_CONNECT_ACK_P")	--//服务器连接回应
    self.WEB_LOGIN_REQ_P = incr("WEB_LOGIN_REQ_P")	--//web登陆请求
    self.WEB_LOGIN_ACK_P = incr("WEB_LOGIN_ACK_P")	--//web登陆回复
    self.WEB_CHECK_RECHARGE_ACCOUNT_REQ_P = incr("WEB_CHECK_RECHARGE_ACCOUNT_REQ_P")	--//web充值账号验证请求
    self.WEB_CHECK_RECHARGE_ACCOUNT_ACK_P = incr("WEB_CHECK_RECHARGE_ACCOUNT_ACK_P")	--//web充值账号验证回复
    self.WEB_SEND_RECHARGE_REQ_P = incr("WEB_SEND_RECHARGE_REQ_P")	--//web充值请求
    self.WEB_SEND_RECHARGE_ACK_P = incr("WEB_SEND_RECHARGE_ACK_P")	--//web充值回复
    self.WEB_SEND_RECHARGE_RETURN_REQ_P = incr("WEB_SEND_RECHARGE_RETURN_REQ_P")	--//web发送银行充值回复
    self.WEB_SEND_RECHARGE_RETURN_ACK_P = incr("WEB_SEND_RECHARGE_RETURN_ACK_P")	--//服务器发送接受银行充值回复
    self.WEB_SEND_SHOP_ITEM_DATA_REQ_P = incr("WEB_SEND_SHOP_ITEM_DATA_REQ_P")	--//web发送商品数据列表请求
    self.WEB_SEND_SHOP_ITEM_DATA_ACK_P = incr("WEB_SEND_SHOP_ITEM_DATA_ACK_P")	--//web发送商品数据列表回复
    self.WEB_MD5_INFO_P = incr("WEB_MD5_INFO_P")	--//服务器发送md5信息
    self.WEB_MONEY_TOP_DATA_REQ_P = incr("WEB_MONEY_TOP_DATA_REQ_P")	--//游戏币排行前10列表请求
    self.WEB_MONEY_TOP_DATA_ACK_P = incr("WEB_MONEY_TOP_DATA_ACK_P")	--//游戏币排行前10列表回复
    self.WEB_HONOR_TOP_DATA_REQ_P = incr("WEB_HONOR_TOP_DATA_REQ_P")	--//声望排行前10列表请求
    self.WEB_HONOR_TOP_DATA_ACK_P = incr("WEB_HONOR_TOP_DATA_ACK_P")	--//声望排行前10列表回复
    self.WEB_MD5_INFO_REQ_P = incr("WEB_MD5_INFO_REQ_P")	--//web服务器MD5请求
    self.WEB_REG_CHECK_REQ_P = incr("WEB_REG_CHECK_REQ_P")	--//注册检测请求
    self.WEB_REG_CHECK_ACK_P = incr("WEB_REG_CHECK_ACK_P")	--//注册检测回复
    self.WEB_REG_USER_REQ_P = incr("WEB_REG_USER_REQ_P")	--//用户注册请求
    self.WEB_REG_USER_ACK_P = incr("WEB_REG_USER_ACK_P")	--//用户注册回复
    self.WEB_UPDATE_PASSWORD_REQ_P = incr("WEB_UPDATE_PASSWORD_REQ_P")	--//修改密码请求
    self.WEB_UPDATE_PASSWORD_ACK_P = incr("WEB_UPDATE_PASSWORD_ACK_P")	--//修改密码回复
    self.WEB_GET_PASSWORD_REQ_P = incr("WEB_GET_PASSWORD_REQ_P")	--//找回密码请求
    self.WEB_GET_PASSWORD_ACK_P = incr("WEB_GET_PASSWORD_ACK_P")	--//找回密码回复
    self.WEB_CHANGE_SECOND_PASSWORD_REQ_P = incr("WEB_CHANGE_SECOND_PASSWORD_REQ_P")	--//修改二级密码请求
    self.WEB_CHANGE_SECOND_PASSWORD_ACK_P = incr("WEB_CHANGE_SECOND_PASSWORD_ACK_P")	--//修改二级密码回复
    self.WEB_UNBINDMAC_REQ_P = incr("WEB_UNBINDMAC_REQ_P")	--//解除锁定请求
    self.WEB_UNBINDMAC_ACK_P = incr("WEB_UNBINDMAC_ACK_P")	--//解除锁定回复
    self.WEB_EXCHANGE_REQ_P = incr("WEB_EXCHANGE_REQ_P")	--//抽奖兑换扣除元宝请求
    self.WEB_EXCHANGE_ACK_P = incr("WEB_EXCHANGE_ACK_P")	--//抽奖兑换扣除元宝回复
    self.WEB_SEND_CARDRECHARGE_REQ_P = incr("WEB_SEND_CARDRECHARGE_REQ_P")	--//web卡充值请求
    self.WEB_SEND_CARDRECHARGE_ACK_P = incr("WEB_SEND_CARDRECHARGE_ACK_P")	--//返回web卡充值请求
    self.WEB_BULLETIN_INFO_P = incr("WEB_BULLETIN_INFO_P")	--//发送广播公告消息到功能服务器
    self.WEB_BULLETIN_UPDATE_P = incr("WEB_BULLETIN_UPDATE_P")	--//发送公告更新消息到功能服务器
    self.WEB_PHONEINVITE_REG_REQ_P = incr("WEB_PHONEINVITE_REG_REQ_P")	--//邀请注册申请
    self.WEB_PHONEINVITE_REG_ACK_P = incr("WEB_PHONEINVITE_REG_ACK_P")	--//邀请注册结果
    self.WEB_GET_USER_TOKEN_REQ_P = incr("WEB_GET_USER_TOKEN_REQ_P")	--//请求用户元宝
    self.WEB_GET_USER_TOKEN_ACK_P = incr("WEB_GET_USER_TOKEN_ACK_P")	--//用户元宝回复

    i = self.PROTOCOL_ITEM - 1
    self.ITEM_GET_ITEM_TEMPLATE_REQ_P = incr("ITEM_GET_ITEM_TEMPLATE_REQ_P")	--道具模板信息请求
    self.ITEM_GET_ITEM_TEMPLATE_ACK_P = incr("ITEM_GET_ITEM_TEMPLATE_ACK_P")	--//道具模板信息回复
    self.SHOP_CLEAR_ITEM_P = incr("SHOP_CLEAR_ITEM_P")	--//通知清除商品数据
    self.SHOP_GET_SHOP_ITEM_REQ_P = incr("SHOP_GET_SHOP_ITEM_REQ_P")	--//商品信息请求
    self.SHOP_GET_SHOP_ITEM_ACK_P = incr("SHOP_GET_SHOP_ITEM_ACK_P")	--//商品信息回复
    self.FD_USER_PROTOCOL_P = incr("FD_USER_PROTOCOL_P")	--//functionserver发送到maindbserver服务器的协议
    self.DF_USER_PROTOCOL_P = incr("DF_USER_PROTOCOL_P")	--//maindbserver返回functionserver服务器的协议
    self.FD_GET_FUNCTION_REQ_P = incr("FD_GET_FUNCTION_REQ_P")	--//功能数据请求
    self.FD_GET_FUNCTION_ACK_P = incr("FD_GET_FUNCTION_ACK_P")	--//功能数据回复
    self.DG_USER_GET_FASHION_ACK_P = incr("DG_USER_GET_FASHION_ACK_P")	--//玩家服装回复给gameserver
    self.GC_USER_FASHION_LIST_P = incr("GC_USER_FASHION_LIST_P")	--//进入桌子服务器发送玩家服装表情列表

    i = self.PROTOCOL_USER_ITEM - 1
    self.GC_FUNCTION_LIST_P = incr("GC_FUNCTION_LIST_P")	--房间游戏功能列表
    self.CG_USER_ITEM_REQ_P = incr("CG_USER_ITEM_REQ_P")	--//用户道具请求
    self.GC_USER_ITEM_ACK_P = incr("GC_USER_ITEM_ACK_P")	--//用户道具回复
    self.SHOP_VERSION_GROUP_REQ_P = incr("SHOP_VERSION_GROUP_REQ_P")	--//商品版本以及分组信息请求
    self.SHOP_VERSION_GROUP_ACK_P = incr("SHOP_VERSION_GROUP_ACK_P")	--//商品版本以及分组信息回复
    self.SHOP_GROUP_ITEM_REQ_P = incr("SHOP_GROUP_ITEM_REQ_P")	--//分组商品数据请求
    self.SHOP_GROUP_ITEM_ACK_P = incr("SHOP_GROUP_ITEM_ACK_P")	--//分组商品数据回复
    self.SHOP_BUY_ITEM_REQ_P = incr("SHOP_BUY_ITEM_REQ_P")	--//购买道具请求
    self.SHOP_BUY_ITEM_ACK_P = incr("SHOP_BUY_ITEM_ACK_P")	--//购买道具回复
    self.SHOP_ITEM_UPDATE_REQ_P = incr("SHOP_ITEM_UPDATE_REQ_P")	--//商城购物车道具更新请求
    self.SHOP_ITEM_UPDATE_ACK_P = incr("SHOP_ITEM_UPDATE_ACK_P")	--//商城购物车道具更新回复
    self.CG_CHANGE_FASHION_REQ_P = incr("CG_CHANGE_FASHION_REQ_P")	--//玩家换装请求
    self.GC_CHANGE_FASHION_ACK_P = incr("GC_CHANGE_FASHION_ACK_P")	--//玩家换装回复
    self.CG_USER_GET_FASHION_REQ_P = incr("CG_USER_GET_FASHION_REQ_P")	--//玩家服装请求
    self.GC_USER_GET_FASHION_ACK_P = incr("GC_USER_GET_FASHION_ACK_P")	--//玩家服装回复
    self.CG_CHANGE_EXPRESSION_REQ_P = incr("CG_CHANGE_EXPRESSION_REQ_P")	--//玩家更换表情请求
    self.GC_CHANGE_EXPRESSION_ACK_P = incr("GC_CHANGE_EXPRESSION_ACK_P")	--//玩家更换表情回复
    self.CG_THROW_ITEM_REQ_P = incr("CG_THROW_ITEM_REQ_P")	--//丢弃道具请求
    self.GC_THROW_ITEM_ACK_P = incr("GC_THROW_ITEM_ACK_P")	--//丢弃道具回复
    self.CG_REBUY_SHOP_INFO_REQ_P = incr("CG_REBUY_SHOP_INFO_REQ_P")	--//续费商品信息请求
    self.GC_REBUY_SHOP_INFO_ACK_P = incr("GC_REBUY_SHOP_INFO_ACK_P")	--//续费商品信息回复
    self.CG_REBUY_ITEM_REQ_P = incr("CG_REBUY_ITEM_REQ_P")	--//续费请求
    self.GC_REBUY_ITEM_ACK_P = incr("GC_REBUY_ITEM_ACK_P")	--//续费回复
    self.USER_ITEM_USE_REQ_P = incr("USER_ITEM_USE_REQ_P")	--//使用道具请求
    self.USER_ITEM_USE_ACK_P = incr("USER_ITEM_USE_ACK_P")	--//使用道具回复
    self.USER_ITEM_USE_DB_P = incr("USER_ITEM_USE_DB_P")	--//使用道具数据库回复
    self.USER_ITEM_USE_FUNCTION_P = incr("USER_ITEM_USE_FUNCTION_P")	--//使用道具
    self.USER_CHAT_BROADCAST_P = incr("USER_CHAT_BROADCAST_P")	--//世界聊天
    self.CG_USER_PRESENT_REQ_P = incr("CG_USER_PRESENT_REQ_P")	--//购买赠送请求
    self.GC_USER_PRESENT_ACK_P = incr("GC_USER_PRESENT_ACK_P")	--//购买赠送回复
    self.USER_USE_EXPRESSION_P = incr("USER_USE_EXPRESSION_P")	--//使用表情
    self.SHOP_PROTOCOL_NUM = incr("SHOP_PROTOCOL_NUM")	--//商城道具用户协议数量

    i = self.PROTOCOL_MAIL_ITEM - 1
    self.CS_USER_SEND_MAIL_P = incr("CS_USER_SEND_MAIL_P")	--客户端发送邮件数据到服务器大厅 （lobbyserver）
    self.SC_USER_SEND_MAIL_ACK_P = incr("SC_USER_SEND_MAIL_ACK_P")	--//服务器大厅回复邮件发送到客户端
    self.CS_USER_RECV_MAIL_HEARDER_P = incr("CS_USER_RECV_MAIL_HEARDER_P")	--//玩家请求邮件头信息
    self.SC_USER_RECV_MAIL_HEARDER_ACK_P = incr("SC_USER_RECV_MAIL_HEARDER_ACK_P")	--//玩家接收邮件头信息列表
    self.SC_NOTIFY_HAVED_MAIL_P = incr("SC_NOTIFY_HAVED_MAIL_P")	--//服务端通知玩家有新邮件到达
    self.CS_USER_VIEW_MAIL_P = incr("CS_USER_VIEW_MAIL_P")	--//客户端请求查看某一条邮件到服务器大厅（lobbyserver）
    self.SC_USER_VIEW_MAIL_ACK_P = incr("SC_USER_VIEW_MAIL_ACK_P")	--//服务端大厅回复邮件已经查看状态到客户端
    self.CS_USER_DELETE_MAIL_P = incr("CS_USER_DELETE_MAIL_P")	--//客户端请求服务端大厅删除邮件到（lobbyserver）
    self.SC_USER_DELETE_MAIL_ACK_P = incr("SC_USER_DELETE_MAIL_ACK_P")	--//服务端大厅回复到客户端
    self.FD_SEND_MAIL_REQ_P = incr("FD_SEND_MAIL_REQ_P")	--//发送邮件请求
    self.DF_SEND_MAIL_ACK_P = incr("DF_SEND_MAIL_ACK_P")	--//发送邮件回复
    self.CF_USER_GET_MAIL_ANNEX_REQ_P = incr("CF_USER_GET_MAIL_ANNEX_REQ_P")	--//获取邮件附件请求
    self.FC_USER_GET_MAIL_ANNEX_ACK_P = incr("FC_USER_GET_MAIL_ANNEX_ACK_P")	--//获取邮件附件回复
    self.MAIL_PROTOCOL_NUM = incr("MAIL_PROTOCOL_NUM")	--//邮件协议数量

    i = self.PROTOCOL_INNER_PAGE - 1
    self.CS_USER_SEND_INNER_P = incr("CS_USER_SEND_INNER_P")	--内嵌网页发送消息到游戏服务器
    self.SC_USER_SEND_INNER_ACK_P = incr("SC_USER_SEND_INNER_ACK_P")	--//游戏服务器回复消息到内嵌网页
    self.CD_USER_SEND_QD_DB_REQ_P = incr("CD_USER_SEND_QD_DB_REQ_P")	--//签到请求数据库服务
    self.DC_USER_SEND_QD_DB_ACK_P = incr("DC_USER_SEND_QD_DB_ACK_P")	--//签到服务数据库回复
    self.GD_USER_SEND_GETQDDAY_DB_REQ_P = incr("GD_USER_SEND_GETQDDAY_DB_REQ_P")	--//获取签到天数请求数据库服务
    self.DG_USER_SEND_GETQDDAY_DB_ACK_P = incr("DG_USER_SEND_GETQDDAY_DB_ACK_P")	--//获取签到天数服务数据库回复*/
    self.GC_SIGNIN_UPDATE_GAMECURRENCY_P = incr("GC_SIGNIN_UPDATE_GAMECURRENCY_P")	--//签到更新游戏豆通知
    self.LD_USER_SEND_GETUPDATECURRENCY_DB_REQ_P = incr("LD_USER_SEND_GETUPDATECURRENCY_DB_REQ_P")	--//发送获取或更新货币信息到数据库服务器
    self.DL_USER_GETORUPDATE_CURRENCY_ACK_P = incr("DL_USER_GETORUPDATE_CURRENCY_ACK_P")	--//返回给大厅服务器获取的货币信息
    self.LC_UPDATE_CURRENCY_ACK_P = incr("LC_UPDATE_CURRENCY_ACK_P")	--//发送更新货币信息给客户端

    i = self.PROTOCOL_TASK - 1
    self.TD_TASK_DATABASE_SAVE_INFO_REQ_P = incr("TD_TASK_DATABASE_SAVE_INFO_REQ_P")	--发送给数据库获取任务保存信息请求
    self.DT_TASK_DATABASE_SAVE_INFO_ACK_P = incr("DT_TASK_DATABASE_SAVE_INFO_ACK_P")	--//数据库回复给游戏服务器获取任务保存信息请求
    self.GC_TASK_TASKINFOLIST_ACK_P = incr("GC_TASK_TASKINFOLIST_ACK_P")	--//发送任务列表信息给客户端
    self.TD_TASK_WRITETASKOPERINFO_REQ_P = incr("TD_TASK_WRITETASKOPERINFO_REQ_P")	--//向数据库写入操作信息请求
    self.TG_TASK_WRITETASKOPERINFO_ACK_P = incr("TG_TASK_WRITETASKOPERINFO_ACK_P")	--//返回给游戏服务器写入的任务操作请求
    self.GC_TASK_WRITETASKOPERINFO_ACK_P = incr("GC_TASK_WRITETASKOPERINFO_ACK_P")	--//返回给客户端任务操作
    self.CG_TASK_GETAWARD_REQ_P = incr("CG_TASK_GETAWARD_REQ_P")	--//获取任务奖励请求
    self.GT_TASK_GETAWARD_REQ_P = incr("GT_TASK_GETAWARD_REQ_P")	--//获取任务奖励请求发送给任务服务器
    self.TD_TASK_GETAWARD_REQ_P = incr("TD_TASK_GETAWARD_REQ_P")	--//获取任务奖励请求发送给数据库服务器
    self.DT_TASK_GETAWARD_ACK_P = incr("DT_TASK_GETAWARD_ACK_P")	--//发送获取任务奖励结果给任务服务器
    self.TG_TASK_GETAWARD_ACK_P = incr("TG_TASK_GETAWARD_ACK_P")	--//发送获取任务奖励结果给游戏服务器
    self.GC_TASK_GETAWARD_ACK_P = incr("GC_TASK_GETAWARD_ACK_P")	--//回复奖励信息给客户端
    self.GC_TASK_NEWTASK_ACK_P = incr("GC_TASK_NEWTASK_ACK_P")	--//发送给客户端新任务消息
    self.GC_TASK_UPDATE_GAMECURRENCY_P = incr("GC_TASK_UPDATE_GAMECURRENCY_P")	--//任务更新游戏豆通知
    self.GC_TASK_UPDATE_GOLD_P = incr("GC_TASK_UPDATE_GOLD_P")	--//任务更新风雷币通知
    self.GC_TASK_UPDATE_YUANBAO_P = incr("GC_TASK_UPDATE_YUANBAO_P")	--//任务更新元宝通知
    self.GT_TASK_GETTASKSAVEINFO_REQ_P = incr("GT_TASK_GETTASKSAVEINFO_REQ_P")	--//发送给任务服务查询是否保存了用户某款游戏的任务信息
    self.TG_TASK_GETTASKSAVEINFO_ACK_P = incr("TG_TASK_GETTASKSAVEINFO_ACK_P")	--//任务服务器返回给游戏服务器存在游戏任务结果
    self.GT_TASK_EXETASKOPER_REQ_P = incr("GT_TASK_EXETASKOPER_REQ_P")	--//给任务服务器发送执行任务请求
    self.GT_TASK_CLEARTASKINFO_REQ_P = incr("GT_TASK_CLEARTASKINFO_REQ_P")	--//发送给任务服务器清除任务信息
    self.TC_USER_GET_MAIL_ANNEX_ACK_P = incr("TC_USER_GET_MAIL_ANNEX_ACK_P")	--//发送给客户端领取商品信息
    self.GT_TASK_INIGAMETASKLIST_REQ_P = incr("GT_TASK_INIGAMETASKLIST_REQ_P")	--//初始化游戏任务列表
    self.TD_GLOBALTASK_DATABASE_SAVE_INFO_REQ_P = incr("TD_GLOBALTASK_DATABASE_SAVE_INFO_REQ_P")	--//从数据库中加载保存的主线固定任务
    self.DT_GLOBALTASK_DATABASE_SAVE_INFO_ACK_P = incr("DT_GLOBALTASK_DATABASE_SAVE_INFO_ACK_P")	--//数据库回复给游戏服务器获取任务保存信息请求
    self.LC_TASK_TASKINFOLIST_ACK_P = incr("LC_TASK_TASKINFOLIST_ACK_P")	--//发送主线任务列表信息给客户端
    self.LC_TASK_WRITETASKOPERINFO_ACK_P = incr("LC_TASK_WRITETASKOPERINFO_ACK_P")	--//返回给客户端主线任务操作
    self.CL_TASK_GETAWARD_REQ_P = incr("CL_TASK_GETAWARD_REQ_P")	--//获取任务奖励请求
    self.LC_TASK_GETAWARD_ACK_P = incr("LC_TASK_GETAWARD_ACK_P")	--//回复奖励信息给客户端
    self.LC_TASK_NEWTASK_ACK_P = incr("LC_TASK_NEWTASK_ACK_P")	--//发送给客户端新任务消息
    self.CL_GET_INVITETASK_STATUS_REQ_P = incr("CL_GET_INVITETASK_STATUS_REQ_P")	--//获取邀请任务状态
    self.LD_GET_INVITETASK_STATUS_REQ_P = incr("LD_GET_INVITETASK_STATUS_REQ_P")	--//发送给数据库服务器查看邀请任务完成状态
    self.DC_GET_INVITETASK_STATUS_ACK_P = incr("DC_GET_INVITETASK_STATUS_ACK_P")	--//发送给客户端查看邀请任务完成状态
    self.CL_GET_INVITERECORD_REQ_P = incr("CL_GET_INVITERECORD_REQ_P")	--//获取邀请记录
    self.LC_GET_INVITERECORD_ACK_P = incr("LC_GET_INVITERECORD_ACK_P")	--//返回邀请记录
    self.CL_WECHATSHARE_REQ_P = incr("CL_WECHATSHARE_REQ_P")	--//微信分享请求
    self.ML_INITASKINFO_ACK_P = incr("ML_INITASKINFO_ACK_P")	--//返回LOBBYSERVER 初始化的任务信息
    self.LT_CLEARALLTASK_INFO_REQ_P = incr("LT_CLEARALLTASK_INFO_REQ_P")	--//发送给任务服务器清除所有任务信息
    self.GT_TASK_CLEARTASKLIST_REQ_P = incr("GT_TASK_CLEARTASKLIST_REQ_P")	--//清除对应的用户任务列表

    i = self.PROTOCOL_NOCHEAT - 1
    self.CG_NOCHEAT_JOIN_GAME_REQ_P = incr("CG_NOCHEAT_JOIN_GAME_REQ_P")	--加入游戏请求
    self.GC_NECHEAT_JOIN_GAME_ACK_P = incr("GC_NECHEAT_JOIN_GAME_ACK_P")	--//加入游戏回复
    self.CG_NOCHEAT_CANCELJOIN_GAME_REQ_P = incr("CG_NOCHEAT_CANCELJOIN_GAME_REQ_P")	--//取消加入游戏请求
    self.GC_NOCHEAT_CANCELJOIN_GAME_ACK_P = incr("GC_NOCHEAT_CANCELJOIN_GAME_ACK_P")	--//取消加入游戏回复
    self.CG_NOCHEAT_CHANGETABLE_REQ_P = incr("CG_NOCHEAT_CHANGETABLE_REQ_P")	--//换桌申请
    self.GC_NOCHEAT_CONTINUE_REQ_P = incr("GC_NOCHEAT_CONTINUE_REQ_P")	--//继续游戏
    self.GC_NOCHEAT_MATCH_INFO_ACK_P = incr("GC_NOCHEAT_MATCH_INFO_ACK_P")	--//发送比赛信息给客户端
    self.GD_NOCHEAT_MATCH_SCORE_RANK_UP_P = incr("GD_NOCHEAT_MATCH_SCORE_RANK_UP_P")	--// 比赛积分排名更新
    self.DG_NOCHEAT_MATCH_SCORE_RANK_UP_ACK_P = incr("DG_NOCHEAT_MATCH_SCORE_RANK_UP_ACK_P")	--// 比赛积分排名刷新回复
    self.GD_NOCHEAT_WEEKLINK_MATCH_SCORE_SAVE_P = incr("GD_NOCHEAT_WEEKLINK_MATCH_SCORE_SAVE_P")	--//保存周赛联赛数据
    self.DG_NOCHEAT_MATCH_HISTORY_RANK_UP_P = incr("DG_NOCHEAT_MATCH_HISTORY_RANK_UP_P")	--//比赛历史排名更新通知
    self.GD_NOCHEAT_MATCH_HISTORY_RANK_GET_P = incr("GD_NOCHEAT_MATCH_HISTORY_RANK_GET_P")	--//获得比赛历史排名
    self.DG_NOCHEAT_MATCH_HISTORY_RANK_GET_P = incr("DG_NOCHEAT_MATCH_HISTORY_RANK_GET_P")	--// 获得比赛历史排名回复
    self.GC_NOCHEAT_MATCH_AWARD_INFO_P = incr("GC_NOCHEAT_MATCH_AWARD_INFO_P")	--// 发送防作弊场比赛奖励信息给客户端
    self.CG_NOCHEAT_MATCH_SCORE_RANK_REQ_P = incr("CG_NOCHEAT_MATCH_SCORE_RANK_REQ_P")	--// 比赛积分排名请求
    self.GC_NOCHEAT_MATCH_SCORE_RANK_ACK_P = incr("GC_NOCHEAT_MATCH_SCORE_RANK_ACK_P")	--// 比赛积分排名回复
    self.CG_NOCHEAT_MATCH_HISTORY_RANK_REQ_P = incr("CG_NOCHEAT_MATCH_HISTORY_RANK_REQ_P")	--// 防作弊场比赛历史排名查询请求
    self.GC_NOCHEAT_MATCH_HISTORY_RANK_ACK_P = incr("GC_NOCHEAT_MATCH_HISTORY_RANK_ACK_P")	--// 防作弊场比赛历史排名查询回复
    self.CG_NOCHEAT_MATCH_GETFIRST_REQ_P = incr("CG_NOCHEAT_MATCH_GETFIRST_REQ_P")	--//得到冠军排行榜申请
    self.GC_NOCHEAT_MATCH_GETFIRST_ACK_P = incr("GC_NOCHEAT_MATCH_GETFIRST_ACK_P")	--//得到冠军排行榜回复
    self.GC_NOCHEAT_MATCH_SENDNEXTROUNDTIME_ACK_P = incr("GC_NOCHEAT_MATCH_SENDNEXTROUNDTIME_ACK_P")	--//循环赛下一轮开始发送开始时间端给客户端
    self.CG_NOCHEATE_MATCH_GETAWARD_REQ_P = incr("CG_NOCHEATE_MATCH_GETAWARD_REQ_P")	--//领取奖励请求
    self.GC_NOCHEATE_MATCH_GETAWARD_ACK_P = incr("GC_NOCHEATE_MATCH_GETAWARD_ACK_P")	--//领取奖励回复
    self.CG_NOCHEATE_GETAWARDINFO_REQ_P = incr("CG_NOCHEATE_GETAWARDINFO_REQ_P")	--//获取奖励信息请求
    self.GC_NOCHEATE_GETAWARDINFO_ACK_P = incr("GC_NOCHEATE_GETAWARDINFO_ACK_P")	--//返回奖励信息给客户端
    self.CS_UPDATE_NOCHEATE_MATCH_USER_INFO_P = incr("CS_UPDATE_NOCHEATE_MATCH_USER_INFO_P")	--// 玩家修改防作弊场比赛个人信息请求
    self.SC_UPDATE_NOCHEATE_MATCH_USER_INFO_P = incr("SC_UPDATE_NOCHEATE_MATCH_USER_INFO_P")	--// 玩家修改防作弊场比赛个人信息回复
    self.GC_NOCHEATE_MATCH_START_P = incr("GC_NOCHEATE_MATCH_START_P")	--// 防作弊场比赛开始通知
    self.GC_NOCHEATE_MATCH_END_P = incr("GC_NOCHEATE_MATCH_END_P")	--// 比赛结束通知
    self.CG_NOCHEATE_MATCH_SEARCHWEEKQUA_REQ_P = incr("CG_NOCHEATE_MATCH_SEARCHWEEKQUA_REQ_P")	--//查询周赛资格申请
    self.GC_NOCHEATE_MATCH_SEARCHWEEKQUA_ACK_P = incr("GC_NOCHEATE_MATCH_SEARCHWEEKQUA_ACK_P")	--//返回查询周赛资格结果
    self.GC_NOCHEATE_MATCH_ROUNDAWARDTIMESPAN_ACK_P = incr("GC_NOCHEATE_MATCH_ROUNDAWARDTIMESPAN_ACK_P")	--//发送循环赛奖励时间端
    self.GC_NOCHEATE_ROUND_USERSCORE_ACK_P = incr("GC_NOCHEATE_ROUND_USERSCORE_ACK_P")	--//循环赛发送用户净胜积分
    self.GC_NOCHEAT_BOARD_RANK_ACK_P = incr("GC_NOCHEAT_BOARD_RANK_ACK_P")	--// 防作弊场播报名次回复
    self.CG_NOCHEAT_ENROLLDECGAMECURRENCY_REQ_P = incr("CG_NOCHEAT_ENROLLDECGAMECURRENCY_REQ_P")	--//周赛报名扣减游戏豆
    self.GC_NOCHEAT_ENROLLDECGAMECURRENCY_ACK_P = incr("GC_NOCHEAT_ENROLLDECGAMECURRENCY_ACK_P")	--//回复报名结果

    i = self.PROTOCOL_PHONE - 1
    self.PL_PHONE_CL_LOGIN_REQ_P = incr("PL_PHONE_CL_LOGIN_REQ_P")	--登录loginserver请求
    self.PL_PHONE_LC_LOGIN_ACK_P = incr("PL_PHONE_LC_LOGIN_ACK_P")	--//登陆loginserver请求回复
    self.CL_PHONE_PHONECODE_REG_REQ_P = incr("CL_PHONE_PHONECODE_REG_REQ_P")	--//手机注册请求
    self.CL_PHONE_CHECK_PHONECODE_P = incr("CL_PHONE_CHECK_PHONECODE_P")	--//手游检查手机号码
    self.PL_PHONE_AL_LOGIN_ACK_P = incr("PL_PHONE_AL_LOGIN_ACK_P")	--//数据库服务器回应登录服务器用户登陆结果
    self.PL_PHONE_LM_USERLOGIN_REQ_P = incr("PL_PHONE_LM_USERLOGIN_REQ_P")	--//登录服务器到管理服务器验证用户登陆
    self.PL_PHONE_ML_LOGIN_ACK_P = incr("PL_PHONE_ML_LOGIN_ACK_P")	--//管理服务器回应登录服务器用户登陆结果
    self.PL_PHONE_CS_USERLOGIN_REQ_P = incr("PL_PHONE_CS_USERLOGIN_REQ_P")	--//登录lobbyserver请求
    self.PL_PHONE_MS_USERLOGIN_ACK_P = incr("PL_PHONE_MS_USERLOGIN_ACK_P")	--//管理服务器通知大厅服务器验证用户登陆结果
    self.PL_PHONE_DS_USERLOGIN_ACK_P = incr("PL_PHONE_DS_USERLOGIN_ACK_P")	--//数据库回应大厅服务器玩家加载数据结果
    self.PL_PHONE_SC_USERLOGIN_ACK_P = incr("PL_PHONE_SC_USERLOGIN_ACK_P")	--//登录lobbyserver请求回复
    self.PL_PHONE_CS_GAMELIST_REQ_P = incr("PL_PHONE_CS_GAMELIST_REQ_P")	--//请求游戏列表
    self.PL_PHONE_SC_GAMELIST_ACK_P = incr("PL_PHONE_SC_GAMELIST_ACK_P")	--//请求游戏列表回复
    self.PL_PHONE_CG_LOGIN_REQ_P = incr("PL_PHONE_CG_LOGIN_REQ_P")	--//登录gameserver请求
    self.PL_PHONE_GC_LOGIN_ACK_P = incr("PL_PHONE_GC_LOGIN_ACK_P")	--//游戏服务器登陆结果
    self.PL_PHONE_GD_USERLOGIN_REQ_P = incr("PL_PHONE_GD_USERLOGIN_REQ_P")	--//游戏服务器登陆用户到数据库服务器
    self.PL_PHONE_CG_ROOM_USERLIST_P = incr("PL_PHONE_CG_ROOM_USERLIST_P")	--//请求房间用户列表
    self.PL_PHONE_CG_FAST_JOIN_GAME_REQ_P = incr("PL_PHONE_CG_FAST_JOIN_GAME_REQ_P")	--//在大厅快速加入房间请求协议
    self.PL_PHONE_CG_FAST_JOIN_GAME_ACK_P = incr("PL_PHONE_CG_FAST_JOIN_GAME_ACK_P")	--//在大厅快速加入房间回复协议
    self.PL_PHONE_CS_CHANGE_NICKNAME_P = incr("PL_PHONE_CS_CHANGE_NICKNAME_P")	--//手游更改昵称头像协议请求
    self.PL_PHONE_GD_CLEAR_BROKEN_RECORD_REQ_P = incr("PL_PHONE_GD_CLEAR_BROKEN_RECORD_REQ_P")	--//清除断线记录
    self.PL_PHONE_GD_GETBESTRESULT_REQ_P = incr("PL_PHONE_GD_GETBESTRESULT_REQ_P")	--//发送给数据库获取最佳番数和战绩
    self.PL_PHONE_GC_GETBESTRESULT_ACK_P = incr("PL_PHONE_GC_GETBESTRESULT_ACK_P")	--//发送给客户端最佳番数和战绩
    self.PL_PHONE_GD_POINTCARDTYPE_REQ_P = incr("PL_PHONE_GD_POINTCARDTYPE_REQ_P")	--//一局完成将最佳番数和胡牌牌型写入数据库
    self.PL_PHONE_LD_USEPHONEVALICODELOGIN_REQ_P = incr("PL_PHONE_LD_USEPHONEVALICODELOGIN_REQ_P")	--//使用手机验证码登录发送给数据库服务器
    self.PL_PHONE_DL_USEPHONEVALICODELOGIN_REQ_P = incr("PL_PHONE_DL_USEPHONEVALICODELOGIN_REQ_P")	--//使用手机验证码登录发送给登录服务器
    self.PL_PHONE_CL_TRAIL_LOGIN_REQ_P = incr("PL_PHONE_CL_TRAIL_LOGIN_REQ_P")	--//游客登录
    self.PL_PHONE_CS_APPNAME_GAMELIST_REQ_P = incr("PL_PHONE_CS_APPNAME_GAMELIST_REQ_P")	--//根据gameName请求游戏列表
    self.CL_PHONE_NOPHONECODE_REG_REQ_P = incr("CL_PHONE_NOPHONECODE_REG_REQ_P")	--//手机号注册特殊协议不需要手机号
    self.PL_PHONE_IOS_RECHARGE_REQ_P = incr("PL_PHONE_IOS_RECHARGE_REQ_P")	--//IOS充值协议请求
    self.PL_PHONE_GD_IOS_RECHARGE_REQ_P = incr("PL_PHONE_GD_IOS_RECHARGE_REQ_P")	--//发送充值协议给日志数据库写入日志
    self.PL_PHONE_IOS_RECHARGE_ACK_P = incr("PL_PHONE_IOS_RECHARGE_ACK_P")	--//返回充值结果给客户端
    self.PL_PHONE_IOS_RECHARGEINFO_REQ_P = incr("PL_PHONE_IOS_RECHARGEINFO_REQ_P")	--//获取充值信息请求
    self.PL_PHONE_IOS_RECHARGEINFO_ACK_P = incr("PL_PHONE_IOS_RECHARGEINFO_ACK_P")	--//返回充值信息
    self.PL_ML_IOSRECHARGEINFO_ACK_P = incr("PL_ML_IOSRECHARGEINFO_ACK_P")	--//返回LOBBYSERVERIOS充值信息
    self.PL_ML_RECHARGEAWARDINFO_ACK_P = incr("PL_ML_RECHARGEAWARDINFO_ACK_P")	--//返回LOBBYSERVER 配置的奖励信息
    self.PL_PHONE_LC_SHOWFIRSTINFO_ACK_P = incr("PL_PHONE_LC_SHOWFIRSTINFO_ACK_P")	--//发送给客户端是否显示首冲按钮
    self.PL_PHONE_GETRECHARGEAWARDINFO_REQ_P = incr("PL_PHONE_GETRECHARGEAWARDINFO_REQ_P")	--//获取充值奖励信息请求
    self.PL_PHONE_LD_GETRECHARGEAWARDINFO_REQ_P = incr("PL_PHONE_LD_GETRECHARGEAWARDINFO_REQ_P")	--//获取充值奖励信息
    self.PL_PHONE_DL_GETRECHARGEAWARDINFO_ACK_P = incr("PL_PHONE_DL_GETRECHARGEAWARDINFO_ACK_P")	--//返回充值信息给大厅服务器
    self.PL_PHONE_LC_GETRECHARGEAWARDINFO_ACK_P = incr("PL_PHONE_LC_GETRECHARGEAWARDINFO_ACK_P")	--//返回给客户端首冲奖励信息
    self.PL_PHONE_CL_GETRECHARGEAWARD_REQ_P = incr("PL_PHONE_CL_GETRECHARGEAWARD_REQ_P")	--//领取充值奖励申请
    self.PL_PHONE_LC_GETRECHARGEAWARD_ACK_P = incr("PL_PHONE_LC_GETRECHARGEAWARD_ACK_P")	--//大厅服务器返回给充值奖励给客户端
    self.PL_PHONE_LD_RECORDUSERTODAYRANK_REQ_P = incr("PL_PHONE_LD_RECORDUSERTODAYRANK_REQ_P")	--//发送给数据库服务器记录当天的三榜信息
    self.PL_PHONE_DL_RECORDUSERTOTAYRANK_ACK_P = incr("PL_PHONE_DL_RECORDUSERTOTAYRANK_ACK_P")	--//返回给LOBBYSERVER更新排行榜信息结果
    self.PL_PHONE_LD_GETRICHRANK_REQ_P = incr("PL_PHONE_LD_GETRICHRANK_REQ_P")	--//获取财富排行榜请求给数据库服务
    self.PL_PHONE_DL_GETRICHRANK_ACK_P = incr("PL_PHONE_DL_GETRICHRANK_ACK_P")	--//返回获取财富排行榜请求给大厅服务器
    self.PL_PHONE_LD_GETGAINRANK_REQ_P = incr("PL_PHONE_LD_GETGAINRANK_REQ_P")	--//获取盈利排行榜请求给数据库服务
    self.PL_PHONE_DL_GETGAINRANK_ACK_P = incr("PL_PHONE_DL_GETGAINRANK_ACK_P")	--//返回获取盈利排行榜给大厅服务器
    self.PL_PHONE_LD_GETHONORRANK_REQ_P = incr("PL_PHONE_LD_GETHONORRANK_REQ_P")	--//获取声望排行榜请求给数据库服务
    self.PL_PHONE_DL_GETHONORRANK_ACK_P = incr("PL_PHONE_DL_GETHONORRANK_ACK_P")	--//返回获取声望排行榜请求给大厅服务器
    self.PL_PHONE_CL_USERRANK_REQ_P = incr("PL_PHONE_CL_USERRANK_REQ_P")	--//请求玩家排名
    self.PL_PHONE_LC_USERRANK_ACK_P = incr("PL_PHONE_LC_USERRANK_ACK_P")	--//返回玩家排名
    self.PL_PHONE_LC_SELFUSERRANK_ACK_P = incr("PL_PHONE_LC_SELFUSERRANK_ACK_P")	--//返回自己的排名
    self.PL_ML_SIGNINAWARDINFO_ACK_P = incr("PL_ML_SIGNINAWARDINFO_ACK_P")	--//返回LOBBYSERVER 签到配置的奖励信息
    self.PL_PHONE_LC_INISIGNININFO_ACK_P = incr("PL_PHONE_LC_INISIGNININFO_ACK_P")	--//初始化签到信息给客户端
    self.PL_PHONE_CL_SIGNIN_REQ_P = incr("PL_PHONE_CL_SIGNIN_REQ_P")	--//签到请求
    self.PL_PHONE_LC_SIGNIN_ACK_P = incr("PL_PHONE_LC_SIGNIN_ACK_P")	--//返回签到结果给客户端
    self.PL_PHONE_CL_CHECKSECONDPASSWORD_REQ_P = incr("PL_PHONE_CL_CHECKSECONDPASSWORD_REQ_P")	--//检测二级密码
    self.PL_PHONE_LC_CHECKSECONDPASSWORD_ACK_P = incr("PL_PHONE_LC_CHECKSECONDPASSWORD_ACK_P")	--//返回检测二级密码结果
    self.PL_PHONE_CL_LOGINSUCESS_FINISHEDTASK_REQ_P = incr("PL_PHONE_CL_LOGINSUCESS_FINISHEDTASK_REQ_P")	--//登录吉林麻将成功后发送协议执行任务
    self.PL_PHONE_CL_REGSUCESS_REQ_P = incr("PL_PHONE_CL_REGSUCESS_REQ_P")	--//吉林麻将注册成功发送申请记录数据库
    self.PL_PHONE_AL_LOGINSUCESS_FINISHEDTASK_ACK_P = incr("PL_PHONE_AL_LOGINSUCESS_FINISHEDTASK_ACK_P")	--//返回吉林麻将注册信息个大厅服务器
    self.PL_PHONE_CL_JUDGEFINISHEDTASK_REQ_P = incr("PL_PHONE_CL_JUDGEFINISHEDTASK_REQ_P")	--//评价完成任务申请
    self.PL_PHONE_CL_GETBASELIVING_REQ_P = incr("PL_PHONE_CL_GETBASELIVING_REQ_P") --进入场次获取是否领取低保
    self.PL_PHONE_CL_GETUSERITEM_REQ_P = incr("PL_PHONE_CL_GETUSERITEM_REQ_P")    --获取手游用户道具请求
    self.PL_PHONE_LC_GETUSERITEM_ACK_P = incr("PL_PHONE_LC_GETUSERITEM_ACK_P")    --回复用户道具信息
    self.PL_PHONE_CL_EXCHANGEPHONE_REQ_P = incr("PL_PHONE_CL_EXCHANGEPHONE_REQ_P")    --兑换话费申请
    self.PL_PHONE_LC_EXCHANGEPHONE_ACK_P = incr("PL_PHONE_LC_EXCHANGEPHONE_ACK_P")    --兑换话费回复

    i = self.PROTOCOL_PHONE - 1 + 500
    self.PL_PHONE_CC_CONNECT_P = incr("PL_PHONE_CC_CONNECT_P")	--/< 建立连接成功
    self.PL_PHONE_CC_DISCONNECT_P = incr("PL_PHONE_CC_DISCONNECT_P")	--///< 断开连接




end

function ProtocolNumber:getProtocolName(code)
    return self.protcolName[code]
end

function ProtocolNumber:getProtocolNameOfMiniGame(code)
    return self.protcolNameOfMiniGame[code]
end

function ProtocolNumber:registerMiniGameProNumber()
    local target = self
    local startCode = self.PROTOCOL_GAMESERVER - 1
    local startCodeReq = self.PROTOCOL_GAMECLIENT - 1

    local lastCodeNum = 0
    target.protcolNameOfMiniGame = {}
    local gameNumber = require(app.codeSrc .."GameNumber").new()
    lastCodeNum = gameNumber:appendMiniGameProNumber(target, startCode)
    lastCodeNum = gameNumber:appendMiniGameProNumberReq(target, startCodeReq) + lastCodeNum
end

return ProtocolNumber
